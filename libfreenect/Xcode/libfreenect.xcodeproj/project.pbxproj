// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 54;
	objects = {

/* Begin PBXAggregateTarget section */
		1040E5077DCDE0E273BDFBD4 /* ALL_BUILD */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = D1BDFEA37D954D4B94E1C675 /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */;
			buildPhases = (
				82599991144C276ECD40B124 /* Generate CMakeFiles/ALL_BUILD */,
			);
			dependencies = (
				6C84C4C2B3154AF4806F784C /* PBXTargetDependency */,
				9A9236C4441746CBB14D7715 /* PBXTargetDependency */,
				F5647BE2E44C446BA4BF9C32 /* PBXTargetDependency */,
				726D250341B8425AA3F52331 /* PBXTargetDependency */,
				7DA517A2385F4CBCB911EB6A /* PBXTargetDependency */,
				9BE62C79B6DB4D9FB47AD33E /* PBXTargetDependency */,
				0458027C1AE0434E8E2B32AD /* PBXTargetDependency */,
				8587C9F41CF34AA0B46E8750 /* PBXTargetDependency */,
				388E46F5207C4505A1979E64 /* PBXTargetDependency */,
				5B24453C4D024E0093F6BBBC /* PBXTargetDependency */,
				559AF37B996F444EAC54BB0B /* PBXTargetDependency */,
				3FE78FB4849A4BF2A1D1CCE8 /* PBXTargetDependency */,
				FFA500232D8747B4958A25FD /* PBXTargetDependency */,
				B87E4AF3C7B94E8DB291B8E9 /* PBXTargetDependency */,
				7A4DFA6C8C93430B86ECACB6 /* PBXTargetDependency */,
				003E747A58D94D109376F21E /* PBXTargetDependency */,
				FDC1C77E4ADF442F932A02BD /* PBXTargetDependency */,
				A982EA7975DD4DB7AC961FFE /* PBXTargetDependency */,
				C2F993F712964535A10EB3C2 /* PBXTargetDependency */,
			);
			name = ALL_BUILD;
			productName = ALL_BUILD;
		};
		2433D2398F26F1112C02E5DB /* ZERO_CHECK */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 41566C4CB8CE441A8AA941A1 /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */;
			buildPhases = (
				A23D8E7CD78DF7EFE350CD3A /* Generate CMakeFiles/ZERO_CHECK */,
			);
			dependencies = (
			);
			name = ZERO_CHECK;
			productName = ZERO_CHECK;
		};
		32A2B8B2304463B1A1577A3A /* install */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 0C3C4822D6E44543B3E12425 /* Build configuration list for PBXAggregateTarget "install" */;
			buildPhases = (
				93426DA6A4AC2C2AC9CE883C /* CMake PostBuild Rules */,
			);
			dependencies = (
				49849628F9D4457CB76BAEB8 /* PBXTargetDependency */,
			);
			name = install;
			productName = install;
		};
		BEA7E574A7BE56E8871A8225 /* uninstall */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 0D13E9F01A144F8EA940A6E1 /* Build configuration list for PBXAggregateTarget "uninstall" */;
			buildPhases = (
				741F8B4ACEF2239330A9F089 /* Generate CMakeFiles/uninstall */,
			);
			dependencies = (
				D430E38A83234F87BDE40FBF /* PBXTargetDependency */,
			);
			name = uninstall;
			productName = uninstall;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		0D0E41C7B9BE44EBB1025D33 /* libfreenect_sync.c in Sources */ = {isa = PBXBuildFile; fileRef = B5014A72911D441D8134AA33 /* libfreenect_sync.c */; };
		11C59093D38C4DF3AA2FA195 /* glpclview.c in Sources */ = {isa = PBXBuildFile; fileRef = 76A8FB1B88664A978A63A463 /* glpclview.c */; };
		13C93DFA26B343BBB374CEEA /* flags.c in Sources */ = {isa = PBXBuildFile; fileRef = 96C8EAA820ED48968760E6D1 /* flags.c */; };
		17DC2F2CA21D43929AE44CE4 /* loader.c in Sources */ = {isa = PBXBuildFile; fileRef = 9AA13C892D614661A5F0F7AC /* loader.c */; };
		1A93B462AB354F09A047407E /* record.c in Sources */ = {isa = PBXBuildFile; fileRef = 6DC234B664184D359A3A040C /* record.c */; };
		2161EC105CB943FE912E4E51 /* registration.c in Sources */ = {isa = PBXBuildFile; fileRef = A53B7B9C1E67423DAE7D46CC /* registration.c */; };
		24522E7B022446C8ADC5D9ED /* glview.c in Sources */ = {isa = PBXBuildFile; fileRef = 8D862F5A57E043BC8F0B81E4 /* glview.c */; };
		2EBD473A62AA47FBA0DEFA82 /* cameras.c in Sources */ = {isa = PBXBuildFile; fileRef = 94467FADADAD4E558C2314F5 /* cameras.c */; };
		32894080BAB249049DACECAD /* parson.c in Sources */ = {isa = PBXBuildFile; fileRef = ED4FFE259FA140CCA25F36D1 /* parson.c */; };
		3A4E12A2E2C549378CB989D9 /* parson.c in Sources */ = {isa = PBXBuildFile; fileRef = 51BF14AB722F459A9E492950 /* parson.c */; };
		3FB366E852EB414C914EFA7E /* hiview.c in Sources */ = {isa = PBXBuildFile; fileRef = 49E66DC04E1542E98C04575C /* hiview.c */; };
		4B02C0B6CCCD49A0BB462964 /* cameras.c in Sources */ = {isa = PBXBuildFile; fileRef = 3695BCF305E843B889D7F254 /* cameras.c */; };
		5D308183C4E142289770DC98 /* micview.c in Sources */ = {isa = PBXBuildFile; fileRef = ABD1401C0AF94159812B7824 /* micview.c */; };
		632B1B4B80D4408FB79E758F /* tiltdemo.c in Sources */ = {isa = PBXBuildFile; fileRef = 222103801623465DBFA6D0AC /* tiltdemo.c */; };
		64CBBC726FD949CB9B0F7ACA /* registration.c in Sources */ = {isa = PBXBuildFile; fileRef = 33FAB3FDBF324C0F84B3D94F /* registration.c */; };
		6C5177E93ED84D7F9B9C2F0C /* wavrecord.c in Sources */ = {isa = PBXBuildFile; fileRef = 9C98D9D45DB6473597C62B54 /* wavrecord.c */; };
		6CEDDEAE0AFE4B6F9440C25F /* camtest.c in Sources */ = {isa = PBXBuildFile; fileRef = 4225A63168A5417B9912792F /* camtest.c */; };
		6D19F14F7CC041979F3A6482 /* loader.c in Sources */ = {isa = PBXBuildFile; fileRef = 385B6D39976A45DC9820DA83 /* loader.c */; };
		719F84E478A442B5B6C3EF84 /* tilt.c in Sources */ = {isa = PBXBuildFile; fileRef = 984451F53963423C95952DB3 /* tilt.c */; };
		7507F7AB185C404BB3F33D0D /* usb_libusb10.c in Sources */ = {isa = PBXBuildFile; fileRef = 2FC66983D4074688993A37D9 /* usb_libusb10.c */; };
		7F0023D585BF4513B7DB0F40 /* usb_libusb10.c in Sources */ = {isa = PBXBuildFile; fileRef = 6DEEDF1932BE40DDA6AF1C7F /* usb_libusb10.c */; };
		86907CA52AF64EA490C4BD2B /* core.c in Sources */ = {isa = PBXBuildFile; fileRef = 1D8434B7A44F4FAE806B43BA /* core.c */; };
		8A3B4392139F406BB7DA3220 /* registration.c in Sources */ = {isa = PBXBuildFile; fileRef = 3BD36617E64844C3A366899F /* registration.c */; };
		8D8E0E8DD5294EBBA1FA7F64 /* cpp_pc_view.cpp in Sources */ = {isa = PBXBuildFile; fileRef = EB6FBC2F7AF34732B46C803B /* cpp_pc_view.cpp */; };
		AB3345E13128494999F55E09 /* cppview.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F95E6D84F604438E8170EF66 /* cppview.cpp */; };
		AB9908E3502A4E12BF414A8E /* fakenect.c in Sources */ = {isa = PBXBuildFile; fileRef = 6543CABFEE5A4272AF90A9BC /* fakenect.c */; };
		AE49DE4FF63048778A74D877 /* audio.c in Sources */ = {isa = PBXBuildFile; fileRef = F869E46C1EB0470E88A4FB0B /* audio.c */; };
		AF4F46F11DA74A489DCCDE75 /* regview.c in Sources */ = {isa = PBXBuildFile; fileRef = BE754A6D77B34DD1AD454752 /* regview.c */; };
		B2F7BEFCD9E1484BB6835275 /* chunkview.c in Sources */ = {isa = PBXBuildFile; fileRef = 52ACC988483746E0AB54D3AA /* chunkview.c */; };
		B524B73A6A1644FDAE509BAF /* flags.c in Sources */ = {isa = PBXBuildFile; fileRef = EFFA2D8B1A99435EA33945C2 /* flags.c */; };
		B5E71B3955E04948A7046C46 /* core.c in Sources */ = {isa = PBXBuildFile; fileRef = 28188C70CB654A10A30DCDB6 /* core.c */; };
		D681EE2E72994D2290FE4F1A /* libfreenect_sync.c in Sources */ = {isa = PBXBuildFile; fileRef = BF0F7B1C366647778B43640E /* libfreenect_sync.c */; };
		E09504EB4A874E07998EB1DD /* tilt.c in Sources */ = {isa = PBXBuildFile; fileRef = 78F440EB0F14451089A5534A /* tilt.c */; };
		E1D28993B4154CFC8F94510D /* audio.c in Sources */ = {isa = PBXBuildFile; fileRef = 6DD3AE3C0282491E9640EC30 /* audio.c */; };
		F7B9451A273E40F790914C29 /* regtest.c in Sources */ = {isa = PBXBuildFile; fileRef = 6039F85BADC9481AB900AC3D /* regtest.c */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		12430AFE4D3F42F18DBCF9F8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2433D2398F26F1112C02E5DB;
			remoteInfo = ZERO_CHECK;
		};
		16610A851AF24670AD350CA3 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = AC52B3F01A4C691117CFE839;
			remoteInfo = freenect;
		};
		172B12712F4649DBA4582A92 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = AE8142046C15A685298E6BB3;
			remoteInfo = "freenect-glpclview";
		};
		21458A60F73644BAB698B115 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2433D2398F26F1112C02E5DB;
			remoteInfo = ZERO_CHECK;
		};
		26239E3CDCD44FCE9000B0CB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = AC52B3F01A4C691117CFE839;
			remoteInfo = freenect;
		};
		345FEFD7FD00465199AEED37 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = AC52B3F01A4C691117CFE839;
			remoteInfo = freenect;
		};
		38F9182A674B4FD491100B30 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 47FBC2E2C14DDF4F509050A5;
			remoteInfo = freenect_sync;
		};
		3BD5BC2F2A4A4F5C809720FE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 9E4C7E9B49E28F2471733604;
			remoteInfo = "freenect-glview";
		};
		3D6F4B9E4E0746A1AF059C6C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2433D2398F26F1112C02E5DB;
			remoteInfo = ZERO_CHECK;
		};
		3DA854D898744609B8A11AC5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2433D2398F26F1112C02E5DB;
			remoteInfo = ZERO_CHECK;
		};
		4103D6601C644E8F9672A3E6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = AC52B3F01A4C691117CFE839;
			remoteInfo = freenect;
		};
		41DE0A6809174D7C97A7D468 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C8B9457D21360F20993877B6;
			remoteInfo = freenectstatic;
		};
		4458F4C3073B4DFBB191B96E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2433D2398F26F1112C02E5DB;
			remoteInfo = ZERO_CHECK;
		};
		45521F5061AA4E75AB73FD98 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 285841D9F5EA17E961F16851;
			remoteInfo = freenect_sync_static;
		};
		509AF31301DC4D7AB1DEB050 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2433D2398F26F1112C02E5DB;
			remoteInfo = ZERO_CHECK;
		};
		52DD3F259D1C4EB7855EB8B8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2433D2398F26F1112C02E5DB;
			remoteInfo = ZERO_CHECK;
		};
		536B4F709107493BBA3E2729 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FB41CE8D51FD233C7E6C851D;
			remoteInfo = "freenect-camtest";
		};
		5973E601D22E48CCA0AE537F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = AC52B3F01A4C691117CFE839;
			remoteInfo = freenect;
		};
		5B3B0FAAC5FB466EB2F7E49D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = AC52B3F01A4C691117CFE839;
			remoteInfo = freenect;
		};
		5B8F6D0E49334F40B4AE40B4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = AC52B3F01A4C691117CFE839;
			remoteInfo = freenect;
		};
		6015DFC585794C9C900D0861 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2433D2398F26F1112C02E5DB;
			remoteInfo = ZERO_CHECK;
		};
		6167B998D19E415C83317FF5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = AC52B3F01A4C691117CFE839;
			remoteInfo = freenect;
		};
		64395640005F4C9F94227E8B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2433D2398F26F1112C02E5DB;
			remoteInfo = ZERO_CHECK;
		};
		64C4204218E040C3B726595B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = AC52B3F01A4C691117CFE839;
			remoteInfo = freenect;
		};
		658080B9FAFC4B07ABD22E31 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = AC52B3F01A4C691117CFE839;
			remoteInfo = freenect;
		};
		69B52CBC6EB94EBCAB5CA7B5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = AC52B3F01A4C691117CFE839;
			remoteInfo = freenect;
		};
		6A08A765A57B4E968ACCFEB3 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = CD34CC1D9643EA463FC57BCF;
			remoteInfo = "freenect-regview";
		};
		6E32780EFCFC4E108CE5EDBA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6A914A5DAE727278BDA1591E;
			remoteInfo = "freenect-cppview";
		};
		71631708A77C4BFDAF3C2018 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2433D2398F26F1112C02E5DB;
			remoteInfo = ZERO_CHECK;
		};
		76CC22B2A1AF495D88781F53 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = AC52B3F01A4C691117CFE839;
			remoteInfo = freenect;
		};
		7C86AB3B3FDD4C7B88637DEB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2433D2398F26F1112C02E5DB;
			remoteInfo = ZERO_CHECK;
		};
		7DBE8B0834254460B027AD89 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = AC52B3F01A4C691117CFE839;
			remoteInfo = freenect;
		};
		81D658237D47414184D97410 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = AC52B3F01A4C691117CFE839;
			remoteInfo = freenect;
		};
		81E3A4A6312743EFA111F8B0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2433D2398F26F1112C02E5DB;
			remoteInfo = ZERO_CHECK;
		};
		8DA9578CBFE6465380CC1EF9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2433D2398F26F1112C02E5DB;
			remoteInfo = ZERO_CHECK;
		};
		918BB06EC38B45F3ABCDA8D1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7D7CF4FF0B24FAEDD40DD275;
			remoteInfo = "freenect-hiview";
		};
		94DAB738EB2144B8AE8AD9EA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = AA064CF094E4A5FD0799D8BF;
			remoteInfo = "freenect-wavrecord";
		};
		999C93C316AE4333A8B4C45E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 63C074D18BE8BE9C57683E6D;
			remoteInfo = fakenect;
		};
		9AE9143BD8F14EEA9DC1321E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 72440F43668EC44423B78C51;
			remoteInfo = "freenect-chunkview";
		};
		A0E79D8D8B8846AB8EAA7709 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 1040E5077DCDE0E273BDFBD4;
			remoteInfo = ALL_BUILD;
		};
		A18F2400398740B686BE3EA2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = AC52B3F01A4C691117CFE839;
			remoteInfo = freenect;
		};
		A46274B6680F4A359D510233 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FDD59D97038E272A68B2400A;
			remoteInfo = "fakenect-record";
		};
		A696E2056DB9489491BD5DA3 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 25D0AFF8F6E373D3B3EAFCAD;
			remoteInfo = "freenect-tiltdemo";
		};
		A90E6AB1A11B4238911C6027 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2433D2398F26F1112C02E5DB;
			remoteInfo = ZERO_CHECK;
		};
		B949EB765241482EA1CCD4F6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 47FBC2E2C14DDF4F509050A5;
			remoteInfo = freenect_sync;
		};
		C24BDEBDD57743BDADA93D06 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2433D2398F26F1112C02E5DB;
			remoteInfo = ZERO_CHECK;
		};
		C74454585A2B4A2A9354A505 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 47FBC2E2C14DDF4F509050A5;
			remoteInfo = freenect_sync;
		};
		CB991FE8786E4C9F932F1C7B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FCF2A4BBFD714B81AF1D1B52;
			remoteInfo = "freenect-micview";
		};
		CD580AECDFA9478A982B8121 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2433D2398F26F1112C02E5DB;
			remoteInfo = ZERO_CHECK;
		};
		DC8E718704EF4EFA9E5D1317 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2433D2398F26F1112C02E5DB;
			remoteInfo = ZERO_CHECK;
		};
		DEF1E257A7414F5DA75ADB79 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2433D2398F26F1112C02E5DB;
			remoteInfo = ZERO_CHECK;
		};
		E216599C51904F47B56BBB1F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2433D2398F26F1112C02E5DB;
			remoteInfo = ZERO_CHECK;
		};
		E29F060DA963415BBCFDE513 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = AC52B3F01A4C691117CFE839;
			remoteInfo = freenect;
		};
		E884754AB00E4CDBAF782D85 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 47140BFD6B1E41C10D590113;
			remoteInfo = "freenect-cpp_pcview";
		};
		EE5CDFA822AB4A6EBE039408 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2433D2398F26F1112C02E5DB;
			remoteInfo = ZERO_CHECK;
		};
		F0B8544B823945F2A7B1DA8D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 47FBC2E2C14DDF4F509050A5;
			remoteInfo = freenect_sync;
		};
		FC09BE9BD26641E783BDB82F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1AE1C58BD83049C0BD709953 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D7E56F1AB442FBFD0C19A55E;
			remoteInfo = "freenect-regtest";
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		0414E05ADBA04102AFEC5F69 /* libfreenect.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = libfreenect.a; sourceTree = BUILT_PRODUCTS_DIR; };
		04A0504E35684B95B817AF26 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = wrappers/c_sync/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		06098A7A0E564385A987486C /* fakenect-record */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = "fakenect-record"; sourceTree = BUILT_PRODUCTS_DIR; };
		13340A895B604C09B96A52A4 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = examples/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		1C0296B64823457395942C83 /* freenect-glpclview */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = "freenect-glpclview"; sourceTree = BUILT_PRODUCTS_DIR; };
		1D8434B7A44F4FAE806B43BA /* core.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = core.c; path = src/core.c; sourceTree = SOURCE_ROOT; };
		1E5A08B082984771AEE44D24 /* libfreenect.0.7.5.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = libfreenect.0.7.5.dylib; sourceTree = BUILT_PRODUCTS_DIR; };
		2063115659E34546A8298285 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = examples/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		211CFBA9F4E04D1AA9A00927 /* OpenGL.framework */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = wrapper.framework; name = OpenGL.framework; path = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/OpenGL.framework; sourceTree = "<absolute>"; };
		222103801623465DBFA6D0AC /* tiltdemo.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = tiltdemo.c; path = examples/tiltdemo.c; sourceTree = SOURCE_ROOT; };
		258A3F1D101F41A4AE5002F0 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = wrappers/c_sync/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		28188C70CB654A10A30DCDB6 /* core.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = core.c; path = src/core.c; sourceTree = SOURCE_ROOT; };
		2931EA6C187C4145A53F1388 /* freenect-tiltdemo */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = "freenect-tiltdemo"; sourceTree = BUILT_PRODUCTS_DIR; };
		2FC66983D4074688993A37D9 /* usb_libusb10.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = usb_libusb10.c; path = src/usb_libusb10.c; sourceTree = SOURCE_ROOT; };
		32312B7672EA42208F58BD3B /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		33FAB3FDBF324C0F84B3D94F /* registration.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = registration.c; path = src/registration.c; sourceTree = SOURCE_ROOT; };
		365E999D3F02404E87D5D054 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		3695BCF305E843B889D7F254 /* cameras.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = cameras.c; path = src/cameras.c; sourceTree = SOURCE_ROOT; };
		385B6D39976A45DC9820DA83 /* loader.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = loader.c; path = src/loader.c; sourceTree = SOURCE_ROOT; };
		3BD36617E64844C3A366899F /* registration.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = registration.c; path = src/registration.c; sourceTree = SOURCE_ROOT; };
		4225A63168A5417B9912792F /* camtest.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = camtest.c; path = examples/camtest.c; sourceTree = SOURCE_ROOT; };
		43541A13C8DF44018E82FC42 /* GLUT.framework */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = wrapper.framework; name = GLUT.framework; path = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework; sourceTree = "<absolute>"; };
		46EB822B3CCB4E809A462443 /* freenect-camtest */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = "freenect-camtest"; sourceTree = BUILT_PRODUCTS_DIR; };
		49E66DC04E1542E98C04575C /* hiview.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = hiview.c; path = examples/hiview.c; sourceTree = SOURCE_ROOT; };
		51BF14AB722F459A9E492950 /* parson.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = parson.c; path = fakenect/parson.c; sourceTree = SOURCE_ROOT; };
		52ACC988483746E0AB54D3AA /* chunkview.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = chunkview.c; path = examples/chunkview.c; sourceTree = SOURCE_ROOT; };
		5E023C82F819462E8D388BBE /* libfreenect_sync.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = libfreenect_sync.a; sourceTree = BUILT_PRODUCTS_DIR; };
		5FD1B61A27E64C87BAB74B52 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = examples/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		6039F85BADC9481AB900AC3D /* regtest.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = regtest.c; path = examples/regtest.c; sourceTree = SOURCE_ROOT; };
		6543CABFEE5A4272AF90A9BC /* fakenect.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = fakenect.c; path = fakenect/fakenect.c; sourceTree = SOURCE_ROOT; };
		6DC234B664184D359A3A040C /* record.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = record.c; path = fakenect/record.c; sourceTree = SOURCE_ROOT; };
		6DD3AE3C0282491E9640EC30 /* audio.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = audio.c; path = src/audio.c; sourceTree = SOURCE_ROOT; };
		6DEEDF1932BE40DDA6AF1C7F /* usb_libusb10.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = usb_libusb10.c; path = src/usb_libusb10.c; sourceTree = SOURCE_ROOT; };
		76A8FB1B88664A978A63A463 /* glpclview.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = glpclview.c; path = examples/glpclview.c; sourceTree = SOURCE_ROOT; };
		78830AE0FA594DAC88E96FC3 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = examples/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		78F440EB0F14451089A5534A /* tilt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = tilt.c; path = src/tilt.c; sourceTree = SOURCE_ROOT; };
		79B0430870474E27A5D046AC /* freenect-micview */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = "freenect-micview"; sourceTree = BUILT_PRODUCTS_DIR; };
		7A329E4203B34D5D84AF6698 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = wrappers/cpp/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		7E1AA9E6EC9A41F0BD8C3D39 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = examples/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		8A66630F701A402EA2913D21 /* freenect-glview */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = "freenect-glview"; sourceTree = BUILT_PRODUCTS_DIR; };
		8AEE72A6901249D8A8FE8C4D /* freenect-cppview */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = "freenect-cppview"; sourceTree = BUILT_PRODUCTS_DIR; };
		8D862F5A57E043BC8F0B81E4 /* glview.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = glview.c; path = examples/glview.c; sourceTree = SOURCE_ROOT; };
		90C706D56B594E3AA3967845 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = examples/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		921F6FADF12D4C2C8FEA8D39 /* freenect-regtest */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = "freenect-regtest"; sourceTree = BUILT_PRODUCTS_DIR; };
		94467FADADAD4E558C2314F5 /* cameras.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = cameras.c; path = src/cameras.c; sourceTree = SOURCE_ROOT; };
		9497C167BA2041DF8C918942 /* freenect-regview */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = "freenect-regview"; sourceTree = BUILT_PRODUCTS_DIR; };
		95FFC81044E44B7EBEDC3442 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = examples/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		96C8EAA820ED48968760E6D1 /* flags.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = flags.c; path = src/flags.c; sourceTree = SOURCE_ROOT; };
		984451F53963423C95952DB3 /* tilt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = tilt.c; path = src/tilt.c; sourceTree = SOURCE_ROOT; };
		9915B5DB85284C7CB0DB3A0C /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = fakenect/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		9AA13C892D614661A5F0F7AC /* loader.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = loader.c; path = src/loader.c; sourceTree = SOURCE_ROOT; };
		9C98D9D45DB6473597C62B54 /* wavrecord.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = wavrecord.c; path = examples/wavrecord.c; sourceTree = SOURCE_ROOT; };
		9D4284957A934AE9BC1E1697 /* libfreenect_sync.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; name = libfreenect_sync.dylib; path = libfreenect_sync.0.7.5.dylib; sourceTree = BUILT_PRODUCTS_DIR; };
		9FD83C0F156047C3B0BED9D9 /* freenect-cpp_pcview */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = "freenect-cpp_pcview"; sourceTree = BUILT_PRODUCTS_DIR; };
		A2C98B8EEC0B440EA3D69517 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = examples/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		A53B7B9C1E67423DAE7D46CC /* registration.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = registration.c; path = src/registration.c; sourceTree = SOURCE_ROOT; };
		ABD1401C0AF94159812B7824 /* micview.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = micview.c; path = examples/micview.c; sourceTree = SOURCE_ROOT; };
		AC9949E6C9CB4907B459DFE8 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = examples/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		ACA4AD3DE8064E6FB4250979 /* freenect-wavrecord */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = "freenect-wavrecord"; sourceTree = BUILT_PRODUCTS_DIR; };
		AE257B5313C9455E9ACC8BF7 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = src/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		B2A87545177941A9A5D9B3D2 /* freenect-chunkview */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = "freenect-chunkview"; sourceTree = BUILT_PRODUCTS_DIR; };
		B5014A72911D441D8134AA33 /* libfreenect_sync.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = libfreenect_sync.c; path = wrappers/c_sync/libfreenect_sync.c; sourceTree = SOURCE_ROOT; };
		B67C3F6A5A0842A189E7B22F /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = src/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		BDCDED05D3084E739085E06B /* freenect-hiview */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = "freenect-hiview"; sourceTree = BUILT_PRODUCTS_DIR; };
		BE754A6D77B34DD1AD454752 /* regview.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = regview.c; path = examples/regview.c; sourceTree = SOURCE_ROOT; };
		BF0F7B1C366647778B43640E /* libfreenect_sync.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = libfreenect_sync.c; path = wrappers/c_sync/libfreenect_sync.c; sourceTree = SOURCE_ROOT; };
		C7316DE264F3419B89A1B237 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = wrappers/cpp/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		DB98EA515D924E38A8D8ACD6 /* Cocoa.framework */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = wrapper.framework; name = Cocoa.framework; path = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/Cocoa.framework; sourceTree = "<absolute>"; };
		EB6FBC2F7AF34732B46C803B /* cpp_pc_view.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cpp_pc_view.cpp; path = wrappers/cpp/cpp_pc_view.cpp; sourceTree = SOURCE_ROOT; };
		ED4FFE259FA140CCA25F36D1 /* parson.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = parson.c; path = fakenect/parson.c; sourceTree = SOURCE_ROOT; };
		EEF32957E9F24BA29F009A5A /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = fakenect/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		EFFA2D8B1A99435EA33945C2 /* flags.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = flags.c; path = src/flags.c; sourceTree = SOURCE_ROOT; };
		F293E751F8504ACBB8BDA3B9 /* libfakenect.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; name = libfakenect.dylib; path = libfakenect.0.7.5.dylib; sourceTree = BUILT_PRODUCTS_DIR; };
		F4E330EDF8194D399224B446 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = examples/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		F869E46C1EB0470E88A4FB0B /* audio.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = audio.c; path = src/audio.c; sourceTree = SOURCE_ROOT; };
		F95E6D84F604438E8170EF66 /* cppview.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cppview.cpp; path = wrappers/cpp/cppview.cpp; sourceTree = SOURCE_ROOT; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		168D60EE39B2412CA42E6167 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1F5AE04DB9F9400BA3CDAA81 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		29411F6DFD7747009ABBD1ED /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2A654977E756496988713363 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2E13FD08FDB444C4854AACFC /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		306575BA90C84ABCA9007A94 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		39F5AF586F6E4BCAA4FB0102 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		5AA2721A0AD94E6C80213D5D /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		5CFB2B13F92745B59CC93816 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		9156F41A668447A7A0645729 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		B383AFBC78D048BF9C1F8FDD /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		BDC771CBF0E74F53A40181A6 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		C944BF3C55E24E8FB20B291F /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D0DF72DA8CDC4A10B6E87FB4 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		DC789328F0794BEF97F4BD85 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E6349F2E3ED04A61AAB0C94C /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		F02CFCD53F72457894F06A65 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		FCD789114EEA4705ACCC13DE /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		07AA4A16FADF4990902A1C69 /* uninstall */ = {
			isa = PBXGroup;
			children = (
				63E0DC3237DF423BBBCB2008 /* CMake Rules */,
				32312B7672EA42208F58BD3B /* CMakeLists.txt */,
			);
			name = uninstall;
			sourceTree = "<group>";
		};
		10309A1C89A74FF19FCC8984 /* freenect-regtest */ = {
			isa = PBXGroup;
			children = (
				712EC82532F345EFAC8A4768 /* Source Files */,
				95FFC81044E44B7EBEDC3442 /* CMakeLists.txt */,
			);
			name = "freenect-regtest";
			sourceTree = "<group>";
		};
		11790EE92E9C4467A6114711 /* freenect-hiview */ = {
			isa = PBXGroup;
			children = (
				AA549BD55ECA43A082EECA77 /* Source Files */,
				AC9949E6C9CB4907B459DFE8 /* CMakeLists.txt */,
			);
			name = "freenect-hiview";
			sourceTree = "<group>";
		};
		199A6E9E339C46958EABF408 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				EB6FBC2F7AF34732B46C803B /* cpp_pc_view.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1ED3D7E446D941D388AA548C /* Source Files */ = {
			isa = PBXGroup;
			children = (
				8D862F5A57E043BC8F0B81E4 /* glview.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2AB5386FE1BF4314992AEB49 /* fakenect */ = {
			isa = PBXGroup;
			children = (
				8339B65B974146E3A9B75B29 /* Source Files */,
				9915B5DB85284C7CB0DB3A0C /* CMakeLists.txt */,
			);
			name = fakenect;
			sourceTree = "<group>";
		};
		305626207FE249399DA05B11 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				211CFBA9F4E04D1AA9A00927 /* OpenGL.framework */,
				43541A13C8DF44018E82FC42 /* GLUT.framework */,
				DB98EA515D924E38A8D8ACD6 /* Cocoa.framework */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		36D6180C4A864D10BC3F16DC /* freenect_sync */ = {
			isa = PBXGroup;
			children = (
				DF7E5B32979D4A71A2310F06 /* Source Files */,
				258A3F1D101F41A4AE5002F0 /* CMakeLists.txt */,
			);
			name = freenect_sync;
			sourceTree = "<group>";
		};
		3B33A960B9344DFF8A1A6072 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				76A8FB1B88664A978A63A463 /* glpclview.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		496025ABB9A443F4A7B03F9E /* Source Files */ = {
			isa = PBXGroup;
			children = (
				222103801623465DBFA6D0AC /* tiltdemo.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		53FD6ED9AED84591BCAE0511 /* freenect */ = {
			isa = PBXGroup;
			children = (
				54F4760762A74043A4B7CAAE /* Source Files */,
				B67C3F6A5A0842A189E7B22F /* CMakeLists.txt */,
			);
			name = freenect;
			sourceTree = "<group>";
		};
		54F4760762A74043A4B7CAAE /* Source Files */ = {
			isa = PBXGroup;
			children = (
				6DD3AE3C0282491E9640EC30 /* audio.c */,
				3695BCF305E843B889D7F254 /* cameras.c */,
				1D8434B7A44F4FAE806B43BA /* core.c */,
				EFFA2D8B1A99435EA33945C2 /* flags.c */,
				9AA13C892D614661A5F0F7AC /* loader.c */,
				3BD36617E64844C3A366899F /* registration.c */,
				984451F53963423C95952DB3 /* tilt.c */,
				2FC66983D4074688993A37D9 /* usb_libusb10.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		55A95623E3B9419D82A43E0E /* Source Files */ = {
			isa = PBXGroup;
			children = (
				BE754A6D77B34DD1AD454752 /* regview.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		5FD4AD8F53EB480BB86CADD9 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				F869E46C1EB0470E88A4FB0B /* audio.c */,
				94467FADADAD4E558C2314F5 /* cameras.c */,
				28188C70CB654A10A30DCDB6 /* core.c */,
				96C8EAA820ED48968760E6D1 /* flags.c */,
				385B6D39976A45DC9820DA83 /* loader.c */,
				33FAB3FDBF324C0F84B3D94F /* registration.c */,
				78F440EB0F14451089A5534A /* tilt.c */,
				6DEEDF1932BE40DDA6AF1C7F /* usb_libusb10.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		6060C8432A324DE798765F76 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		63E0DC3237DF423BBBCB2008 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		681E0DD050A54FAEB6DF4168 /* freenect-cppview */ = {
			isa = PBXGroup;
			children = (
				EB713EA4AB524ACB9031329C /* Source Files */,
				7A329E4203B34D5D84AF6698 /* CMakeLists.txt */,
			);
			name = "freenect-cppview";
			sourceTree = "<group>";
		};
		6E678E4737514F54B533AB0B /* freenect-glview */ = {
			isa = PBXGroup;
			children = (
				1ED3D7E446D941D388AA548C /* Source Files */,
				90C706D56B594E3AA3967845 /* CMakeLists.txt */,
			);
			name = "freenect-glview";
			sourceTree = "<group>";
		};
		712EC82532F345EFAC8A4768 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				6039F85BADC9481AB900AC3D /* regtest.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		74D4E3B6286442E685EAF108 /* Resources */ = {
			isa = PBXGroup;
			children = (
			);
			name = Resources;
			sourceTree = "<group>";
		};
		7BA753E55FBD4E90A3C6F51E /* freenect-chunkview */ = {
			isa = PBXGroup;
			children = (
				8D076D8842054570B1DE15F8 /* Source Files */,
				5FD1B61A27E64C87BAB74B52 /* CMakeLists.txt */,
			);
			name = "freenect-chunkview";
			sourceTree = "<group>";
		};
		7D98706DBD2045109A5DF895 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				9C98D9D45DB6473597C62B54 /* wavrecord.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		8071F03837274F0FBBDBD8B1 /* freenectstatic */ = {
			isa = PBXGroup;
			children = (
				5FD4AD8F53EB480BB86CADD9 /* Source Files */,
				AE257B5313C9455E9ACC8BF7 /* CMakeLists.txt */,
			);
			name = freenectstatic;
			sourceTree = "<group>";
		};
		8339B65B974146E3A9B75B29 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				6543CABFEE5A4272AF90A9BC /* fakenect.c */,
				ED4FFE259FA140CCA25F36D1 /* parson.c */,
				A53B7B9C1E67423DAE7D46CC /* registration.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		8D076D8842054570B1DE15F8 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				52ACC988483746E0AB54D3AA /* chunkview.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		94C536553585465E88EE4DAD /* freenect-camtest */ = {
			isa = PBXGroup;
			children = (
				FB59C5E3A17341088AA931B1 /* Source Files */,
				A2C98B8EEC0B440EA3D69517 /* CMakeLists.txt */,
			);
			name = "freenect-camtest";
			sourceTree = "<group>";
		};
		A08091127A994B43953710B9 /* ALL_BUILD */ = {
			isa = PBXGroup;
			children = (
				6060C8432A324DE798765F76 /* CMake Rules */,
				365E999D3F02404E87D5D054 /* CMakeLists.txt */,
			);
			name = ALL_BUILD;
			sourceTree = "<group>";
		};
		A838F92749AB49B298B8003C /* Source Files */ = {
			isa = PBXGroup;
			children = (
				B5014A72911D441D8134AA33 /* libfreenect_sync.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		AA549BD55ECA43A082EECA77 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				49E66DC04E1542E98C04575C /* hiview.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		ADD05D18E22E4F26B08679F0 /* freenect-glpclview */ = {
			isa = PBXGroup;
			children = (
				3B33A960B9344DFF8A1A6072 /* Source Files */,
				7E1AA9E6EC9A41F0BD8C3D39 /* CMakeLists.txt */,
			);
			name = "freenect-glpclview";
			sourceTree = "<group>";
		};
		AE41F51B4D9A47209627D0FF /* Source Files */ = {
			isa = PBXGroup;
			children = (
				51BF14AB722F459A9E492950 /* parson.c */,
				6DC234B664184D359A3A040C /* record.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		B22D9FCD5AEC4973A4282871 /* freenect-tiltdemo */ = {
			isa = PBXGroup;
			children = (
				496025ABB9A443F4A7B03F9E /* Source Files */,
				2063115659E34546A8298285 /* CMakeLists.txt */,
			);
			name = "freenect-tiltdemo";
			sourceTree = "<group>";
		};
		B33C638617304555A847C9A6 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				ABD1401C0AF94159812B7824 /* micview.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		B9CB28457BCA40A3B8A9E593 /* freenect-cpp_pcview */ = {
			isa = PBXGroup;
			children = (
				199A6E9E339C46958EABF408 /* Source Files */,
				C7316DE264F3419B89A1B237 /* CMakeLists.txt */,
			);
			name = "freenect-cpp_pcview";
			sourceTree = "<group>";
		};
		C2E7F149DF244F76BDAF21BB /* freenect_sync_static */ = {
			isa = PBXGroup;
			children = (
				A838F92749AB49B298B8003C /* Source Files */,
				04A0504E35684B95B817AF26 /* CMakeLists.txt */,
			);
			name = freenect_sync_static;
			sourceTree = "<group>";
		};
		D51F313AF4D543E380F0370D /* freenect-wavrecord */ = {
			isa = PBXGroup;
			children = (
				7D98706DBD2045109A5DF895 /* Source Files */,
				13340A895B604C09B96A52A4 /* CMakeLists.txt */,
			);
			name = "freenect-wavrecord";
			sourceTree = "<group>";
		};
		DF7E5B32979D4A71A2310F06 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				BF0F7B1C366647778B43640E /* libfreenect_sync.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		E4947C424D954CEA9B12078F /* fakenect-record */ = {
			isa = PBXGroup;
			children = (
				AE41F51B4D9A47209627D0FF /* Source Files */,
				EEF32957E9F24BA29F009A5A /* CMakeLists.txt */,
			);
			name = "fakenect-record";
			sourceTree = "<group>";
		};
		E957184093DC4310BD5177CD /* Products */ = {
			isa = PBXGroup;
			children = (
				F293E751F8504ACBB8BDA3B9 /* libfakenect.dylib */,
				06098A7A0E564385A987486C /* fakenect-record */,
				1E5A08B082984771AEE44D24 /* libfreenect.0.7.5.dylib */,
				46EB822B3CCB4E809A462443 /* freenect-camtest */,
				B2A87545177941A9A5D9B3D2 /* freenect-chunkview */,
				9FD83C0F156047C3B0BED9D9 /* freenect-cpp_pcview */,
				8AEE72A6901249D8A8FE8C4D /* freenect-cppview */,
				1C0296B64823457395942C83 /* freenect-glpclview */,
				8A66630F701A402EA2913D21 /* freenect-glview */,
				BDCDED05D3084E739085E06B /* freenect-hiview */,
				79B0430870474E27A5D046AC /* freenect-micview */,
				921F6FADF12D4C2C8FEA8D39 /* freenect-regtest */,
				9497C167BA2041DF8C918942 /* freenect-regview */,
				2931EA6C187C4145A53F1388 /* freenect-tiltdemo */,
				ACA4AD3DE8064E6FB4250979 /* freenect-wavrecord */,
				9D4284957A934AE9BC1E1697 /* libfreenect_sync.dylib */,
				5E023C82F819462E8D388BBE /* libfreenect_sync.a */,
				0414E05ADBA04102AFEC5F69 /* libfreenect.a */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		EB43854708DF4C48BB019316 /* freenect-regview */ = {
			isa = PBXGroup;
			children = (
				55A95623E3B9419D82A43E0E /* Source Files */,
				78830AE0FA594DAC88E96FC3 /* CMakeLists.txt */,
			);
			name = "freenect-regview";
			sourceTree = "<group>";
		};
		EB563F222F1A46E6AF9B7D78 = {
			isa = PBXGroup;
			children = (
				07AA4A16FADF4990902A1C69 /* uninstall */,
				A08091127A994B43953710B9 /* ALL_BUILD */,
				53FD6ED9AED84591BCAE0511 /* freenect */,
				8071F03837274F0FBBDBD8B1 /* freenectstatic */,
				94C536553585465E88EE4DAD /* freenect-camtest */,
				D51F313AF4D543E380F0370D /* freenect-wavrecord */,
				6E678E4737514F54B533AB0B /* freenect-glview */,
				EB43854708DF4C48BB019316 /* freenect-regview */,
				11790EE92E9C4467A6114711 /* freenect-hiview */,
				7BA753E55FBD4E90A3C6F51E /* freenect-chunkview */,
				EED725D558BE4E3099235E78 /* freenect-micview */,
				10309A1C89A74FF19FCC8984 /* freenect-regtest */,
				B22D9FCD5AEC4973A4282871 /* freenect-tiltdemo */,
				ADD05D18E22E4F26B08679F0 /* freenect-glpclview */,
				2AB5386FE1BF4314992AEB49 /* fakenect */,
				E4947C424D954CEA9B12078F /* fakenect-record */,
				36D6180C4A864D10BC3F16DC /* freenect_sync */,
				C2E7F149DF244F76BDAF21BB /* freenect_sync_static */,
				681E0DD050A54FAEB6DF4168 /* freenect-cppview */,
				B9CB28457BCA40A3B8A9E593 /* freenect-cpp_pcview */,
				E957184093DC4310BD5177CD /* Products */,
				305626207FE249399DA05B11 /* Frameworks */,
				74D4E3B6286442E685EAF108 /* Resources */,
			);
			sourceTree = "<group>";
		};
		EB713EA4AB524ACB9031329C /* Source Files */ = {
			isa = PBXGroup;
			children = (
				F95E6D84F604438E8170EF66 /* cppview.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		EED725D558BE4E3099235E78 /* freenect-micview */ = {
			isa = PBXGroup;
			children = (
				B33C638617304555A847C9A6 /* Source Files */,
				F4E330EDF8194D399224B446 /* CMakeLists.txt */,
			);
			name = "freenect-micview";
			sourceTree = "<group>";
		};
		FB59C5E3A17341088AA931B1 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				4225A63168A5417B9912792F /* camtest.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		25D0AFF8F6E373D3B3EAFCAD /* freenect-tiltdemo */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 3B2AF1C174D24D31BA93B0BA /* Build configuration list for PBXNativeTarget "freenect-tiltdemo" */;
			buildPhases = (
				61141C90460C47AE9863E654 /* Sources */,
				2A654977E756496988713363 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				5F077CDF5D284105A1D86BB6 /* PBXTargetDependency */,
				0D9C53D320A04961B67B28D3 /* PBXTargetDependency */,
				3324691944A44AAC9636FDF1 /* PBXTargetDependency */,
			);
			name = "freenect-tiltdemo";
			productName = "freenect-tiltdemo";
			productReference = 2931EA6C187C4145A53F1388 /* freenect-tiltdemo */;
			productType = "com.apple.product-type.tool";
		};
		285841D9F5EA17E961F16851 /* freenect_sync_static */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 5BD1A7E4F030424F99FBA302 /* Build configuration list for PBXNativeTarget "freenect_sync_static" */;
			buildPhases = (
				2946A2646AA84348962653FE /* Sources */,
				B383AFBC78D048BF9C1F8FDD /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				AD9DDCD9C5754896A90DF584 /* PBXTargetDependency */,
				FF67C6A0E258419484302A65 /* PBXTargetDependency */,
			);
			name = freenect_sync_static;
			productName = freenect_sync_static;
			productReference = 5E023C82F819462E8D388BBE /* libfreenect_sync.a */;
			productType = "com.apple.product-type.library.static";
		};
		47140BFD6B1E41C10D590113 /* freenect-cpp_pcview */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 53D2AFE33D3C4A8C9F8C57D4 /* Build configuration list for PBXNativeTarget "freenect-cpp_pcview" */;
			buildPhases = (
				E6C9661C0B9343DA8FDD4D67 /* Sources */,
				2E13FD08FDB444C4854AACFC /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				929A2F1B4E214D5686599652 /* PBXTargetDependency */,
				126F982BFE9C464A9A991245 /* PBXTargetDependency */,
			);
			name = "freenect-cpp_pcview";
			productName = "freenect-cpp_pcview";
			productReference = 9FD83C0F156047C3B0BED9D9 /* freenect-cpp_pcview */;
			productType = "com.apple.product-type.tool";
		};
		47FBC2E2C14DDF4F509050A5 /* freenect_sync */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 86F84D11B9414C73BCACFC67 /* Build configuration list for PBXNativeTarget "freenect_sync" */;
			buildPhases = (
				47184D9F638E4670B4C27A87 /* Sources */,
				5AA2721A0AD94E6C80213D5D /* Frameworks */,
				21B94D66582B5033B0818D24 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				65E59BD7B9D24152B004B2B7 /* PBXTargetDependency */,
				485743B1DD2D40489EEA4CCB /* PBXTargetDependency */,
			);
			name = freenect_sync;
			productName = freenect_sync;
			productReference = 9D4284957A934AE9BC1E1697 /* libfreenect_sync.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		63C074D18BE8BE9C57683E6D /* fakenect */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 9FAEC6A19A3747E786F4AF57 /* Build configuration list for PBXNativeTarget "fakenect" */;
			buildPhases = (
				EFF61FDE9B3544E49F682A0C /* Sources */,
				168D60EE39B2412CA42E6167 /* Frameworks */,
				CBD323E818B75334BACA1C17 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				FAEE671A5B90423FA07AAAE1 /* PBXTargetDependency */,
			);
			name = fakenect;
			productName = fakenect;
			productReference = F293E751F8504ACBB8BDA3B9 /* libfakenect.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		6A914A5DAE727278BDA1591E /* freenect-cppview */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 7E2DF7F357D44BD9AC9B16C0 /* Build configuration list for PBXNativeTarget "freenect-cppview" */;
			buildPhases = (
				36654FFEEAEC4CCCA6D40A97 /* Sources */,
				D0DF72DA8CDC4A10B6E87FB4 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				1A9D8897CC2840669724D802 /* PBXTargetDependency */,
				8CA265BEFFE7429386AC96FD /* PBXTargetDependency */,
			);
			name = "freenect-cppview";
			productName = "freenect-cppview";
			productReference = 8AEE72A6901249D8A8FE8C4D /* freenect-cppview */;
			productType = "com.apple.product-type.tool";
		};
		72440F43668EC44423B78C51 /* freenect-chunkview */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 84F403900EEB49F0AEB78AAF /* Build configuration list for PBXNativeTarget "freenect-chunkview" */;
			buildPhases = (
				FFAD413E7594433EB40776ED /* Sources */,
				1F5AE04DB9F9400BA3CDAA81 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				1663C6FFDD294397842EE7E0 /* PBXTargetDependency */,
				F8A0C3E6A3CC4AB9B99A0967 /* PBXTargetDependency */,
			);
			name = "freenect-chunkview";
			productName = "freenect-chunkview";
			productReference = B2A87545177941A9A5D9B3D2 /* freenect-chunkview */;
			productType = "com.apple.product-type.tool";
		};
		7D7CF4FF0B24FAEDD40DD275 /* freenect-hiview */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = E389769BAB7241AB852D5C08 /* Build configuration list for PBXNativeTarget "freenect-hiview" */;
			buildPhases = (
				8FDD6E8E06C443D684574992 /* Sources */,
				5CFB2B13F92745B59CC93816 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				1222ACDF2AB94E62B22B9E21 /* PBXTargetDependency */,
				DF6EE6360CB5407EB4C6D47F /* PBXTargetDependency */,
			);
			name = "freenect-hiview";
			productName = "freenect-hiview";
			productReference = BDCDED05D3084E739085E06B /* freenect-hiview */;
			productType = "com.apple.product-type.tool";
		};
		9E4C7E9B49E28F2471733604 /* freenect-glview */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = D7924B9F803A4272B3A58C4B /* Build configuration list for PBXNativeTarget "freenect-glview" */;
			buildPhases = (
				01A53F49904A484684CCB356 /* Sources */,
				39F5AF586F6E4BCAA4FB0102 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				5C3925BA0A234A7DA9F03B1C /* PBXTargetDependency */,
				EAD5252552F74DD19BA9C69C /* PBXTargetDependency */,
			);
			name = "freenect-glview";
			productName = "freenect-glview";
			productReference = 8A66630F701A402EA2913D21 /* freenect-glview */;
			productType = "com.apple.product-type.tool";
		};
		AA064CF094E4A5FD0799D8BF /* freenect-wavrecord */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = FAF68886DDD2489AADF6AE7D /* Build configuration list for PBXNativeTarget "freenect-wavrecord" */;
			buildPhases = (
				D76C389C0A5843D6AD8D2C4F /* Sources */,
				E6349F2E3ED04A61AAB0C94C /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				2DE174E817F4455481A7C87D /* PBXTargetDependency */,
				9179D6A54B2A49C49595CFFD /* PBXTargetDependency */,
			);
			name = "freenect-wavrecord";
			productName = "freenect-wavrecord";
			productReference = ACA4AD3DE8064E6FB4250979 /* freenect-wavrecord */;
			productType = "com.apple.product-type.tool";
		};
		AC52B3F01A4C691117CFE839 /* freenect */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = FBD6C81F39CA43EE8955DCE2 /* Build configuration list for PBXNativeTarget "freenect" */;
			buildPhases = (
				4B32A7413E6F477C9C8969B8 /* Sources */,
				9156F41A668447A7A0645729 /* Frameworks */,
				A2E5CFD961F9BF14C152871D /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				ECD3E2FF40584868AD4EF775 /* PBXTargetDependency */,
			);
			name = freenect;
			productName = freenect;
			productReference = 1E5A08B082984771AEE44D24 /* libfreenect.0.7.5.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		AE8142046C15A685298E6BB3 /* freenect-glpclview */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 82C03A6A704D44B5A8D234A3 /* Build configuration list for PBXNativeTarget "freenect-glpclview" */;
			buildPhases = (
				AFDA7E61E5AA4D2D8C2D2EFB /* Sources */,
				BDC771CBF0E74F53A40181A6 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				39C6B35352324270870A7E51 /* PBXTargetDependency */,
				91DDE260672F476DBC4D440F /* PBXTargetDependency */,
				27465A4E2F654908AFBC0992 /* PBXTargetDependency */,
			);
			name = "freenect-glpclview";
			productName = "freenect-glpclview";
			productReference = 1C0296B64823457395942C83 /* freenect-glpclview */;
			productType = "com.apple.product-type.tool";
		};
		C8B9457D21360F20993877B6 /* freenectstatic */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = B6779B76FAFB436A80C537F8 /* Build configuration list for PBXNativeTarget "freenectstatic" */;
			buildPhases = (
				74E9102E886F4F45A9BBDF30 /* Sources */,
				29411F6DFD7747009ABBD1ED /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				5E1CC769B7E946D0ABB8AB8A /* PBXTargetDependency */,
			);
			name = freenectstatic;
			productName = freenectstatic;
			productReference = 0414E05ADBA04102AFEC5F69 /* libfreenect.a */;
			productType = "com.apple.product-type.library.static";
		};
		CD34CC1D9643EA463FC57BCF /* freenect-regview */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = B6101FA92FC24A4DB5ABBC20 /* Build configuration list for PBXNativeTarget "freenect-regview" */;
			buildPhases = (
				8B2E29A4035B4A959B74D513 /* Sources */,
				FCD789114EEA4705ACCC13DE /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				764076E791A64CB1ABFEA5AB /* PBXTargetDependency */,
				5BF7B49CB66245B7A6D4AC06 /* PBXTargetDependency */,
			);
			name = "freenect-regview";
			productName = "freenect-regview";
			productReference = 9497C167BA2041DF8C918942 /* freenect-regview */;
			productType = "com.apple.product-type.tool";
		};
		D7E56F1AB442FBFD0C19A55E /* freenect-regtest */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 043806223F6849779CD833CE /* Build configuration list for PBXNativeTarget "freenect-regtest" */;
			buildPhases = (
				8D808F7A51CD4F489EBCCAFD /* Sources */,
				F02CFCD53F72457894F06A65 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				B37DCC3019C549908B26156C /* PBXTargetDependency */,
				F19971EEA5944CB7AFB057F0 /* PBXTargetDependency */,
				7A0A7E4587BF437EAEC39D06 /* PBXTargetDependency */,
			);
			name = "freenect-regtest";
			productName = "freenect-regtest";
			productReference = 921F6FADF12D4C2C8FEA8D39 /* freenect-regtest */;
			productType = "com.apple.product-type.tool";
		};
		FB41CE8D51FD233C7E6C851D /* freenect-camtest */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = F25C668735F548F89E16DE86 /* Build configuration list for PBXNativeTarget "freenect-camtest" */;
			buildPhases = (
				9C3A12749D87468F9959C511 /* Sources */,
				C944BF3C55E24E8FB20B291F /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				1999539070344559870E9B52 /* PBXTargetDependency */,
				EDB33A7822BF4D06BBF32FA5 /* PBXTargetDependency */,
			);
			name = "freenect-camtest";
			productName = "freenect-camtest";
			productReference = 46EB822B3CCB4E809A462443 /* freenect-camtest */;
			productType = "com.apple.product-type.tool";
		};
		FCF2A4BBFD714B81AF1D1B52 /* freenect-micview */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = F74B2BA64ADE4986AC47B6CA /* Build configuration list for PBXNativeTarget "freenect-micview" */;
			buildPhases = (
				0CCFB9A218244A8A9C066353 /* Sources */,
				306575BA90C84ABCA9007A94 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				F180C142D56C49DE8DCA2BD1 /* PBXTargetDependency */,
				ABB2D97E64684FA9B98E914D /* PBXTargetDependency */,
			);
			name = "freenect-micview";
			productName = "freenect-micview";
			productReference = 79B0430870474E27A5D046AC /* freenect-micview */;
			productType = "com.apple.product-type.tool";
		};
		FDD59D97038E272A68B2400A /* fakenect-record */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = D7EFFF63AA62445CB8C57FB9 /* Build configuration list for PBXNativeTarget "fakenect-record" */;
			buildPhases = (
				66B6A65198C94C8CB113BF0E /* Sources */,
				DC789328F0794BEF97F4BD85 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				FE5BC73A946145259173BBD7 /* PBXTargetDependency */,
				7DE595B8B8E448A6B014517C /* PBXTargetDependency */,
			);
			name = "fakenect-record";
			productName = "fakenect-record";
			productReference = 06098A7A0E564385A987486C /* fakenect-record */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		1AE1C58BD83049C0BD709953 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 1640;
			};
			buildConfigurationList = 9E1B89C47D6148CFBDFF542E /* Build configuration list for PBXProject "libfreenect" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = EB563F222F1A46E6AF9B7D78;
			projectDirPath = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect;
			projectRoot = "";
			targets = (
				1040E5077DCDE0E273BDFBD4 /* ALL_BUILD */,
				63C074D18BE8BE9C57683E6D /* fakenect */,
				FDD59D97038E272A68B2400A /* fakenect-record */,
				AC52B3F01A4C691117CFE839 /* freenect */,
				FB41CE8D51FD233C7E6C851D /* freenect-camtest */,
				72440F43668EC44423B78C51 /* freenect-chunkview */,
				47140BFD6B1E41C10D590113 /* freenect-cpp_pcview */,
				6A914A5DAE727278BDA1591E /* freenect-cppview */,
				AE8142046C15A685298E6BB3 /* freenect-glpclview */,
				9E4C7E9B49E28F2471733604 /* freenect-glview */,
				7D7CF4FF0B24FAEDD40DD275 /* freenect-hiview */,
				FCF2A4BBFD714B81AF1D1B52 /* freenect-micview */,
				D7E56F1AB442FBFD0C19A55E /* freenect-regtest */,
				CD34CC1D9643EA463FC57BCF /* freenect-regview */,
				25D0AFF8F6E373D3B3EAFCAD /* freenect-tiltdemo */,
				AA064CF094E4A5FD0799D8BF /* freenect-wavrecord */,
				47FBC2E2C14DDF4F509050A5 /* freenect_sync */,
				285841D9F5EA17E961F16851 /* freenect_sync_static */,
				C8B9457D21360F20993877B6 /* freenectstatic */,
				32A2B8B2304463B1A1577A3A /* install */,
				BEA7E574A7BE56E8871A8225 /* uninstall */,
				2433D2398F26F1112C02E5DB /* ZERO_CHECK */,
			);
		};
/* End PBXProject section */

/* Begin PBXShellScriptBuildPhase section */
		21B94D66582B5033B0818D24 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "CMake PostBuild Rules";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/wrappers/c_sync\n  /opt/homebrew/bin/cmake -E cmake_symlink_library /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug/libfreenect_sync.0.7.5.dylib /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug/libfreenect_sync.0.dylib /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug/libfreenect_sync.dylib\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/wrappers/c_sync\n  /opt/homebrew/bin/cmake -E cmake_symlink_library /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release/libfreenect_sync.0.7.5.dylib /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release/libfreenect_sync.0.dylib /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release/libfreenect_sync.dylib\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/wrappers/c_sync\n  /opt/homebrew/bin/cmake -E cmake_symlink_library /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel/libfreenect_sync.0.7.5.dylib /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel/libfreenect_sync.0.dylib /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel/libfreenect_sync.dylib\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/wrappers/c_sync\n  /opt/homebrew/bin/cmake -E cmake_symlink_library /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo/libfreenect_sync.0.7.5.dylib /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo/libfreenect_sync.0.dylib /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo/libfreenect_sync.dylib\nfi\n";
			showEnvVarsInLog = 0;
		};
		741F8B4ACEF2239330A9F089 /* Generate CMakeFiles/uninstall */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/uninstall";
			outputPaths = (
				/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/CMakeFiles/uninstall,
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode\n  /opt/homebrew/bin/cmake -P /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/UninstallTarget.cmake\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode\n  /opt/homebrew/bin/cmake -P /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/UninstallTarget.cmake\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode\n  /opt/homebrew/bin/cmake -P /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/UninstallTarget.cmake\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode\n  /opt/homebrew/bin/cmake -P /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/UninstallTarget.cmake\nfi\n";
			showEnvVarsInLog = 0;
		};
		82599991144C276ECD40B124 /* Generate CMakeFiles/ALL_BUILD */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/ALL_BUILD";
			outputPaths = (
				/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/CMakeFiles/ALL_BUILD,
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode\n  echo Build\\ all\\ projects\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode\n  echo Build\\ all\\ projects\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode\n  echo Build\\ all\\ projects\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode\n  echo Build\\ all\\ projects\nfi\n";
			showEnvVarsInLog = 0;
		};
		93426DA6A4AC2C2AC9CE883C /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "CMake PostBuild Rules";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode\n  /opt/homebrew/bin/cmake -DBUILD_TYPE=$CONFIGURATION$EFFECTIVE_PLATFORM_NAME -P cmake_install.cmake\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode\n  /opt/homebrew/bin/cmake -DBUILD_TYPE=$CONFIGURATION$EFFECTIVE_PLATFORM_NAME -P cmake_install.cmake\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode\n  /opt/homebrew/bin/cmake -DBUILD_TYPE=$CONFIGURATION$EFFECTIVE_PLATFORM_NAME -P cmake_install.cmake\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode\n  /opt/homebrew/bin/cmake -DBUILD_TYPE=$CONFIGURATION$EFFECTIVE_PLATFORM_NAME -P cmake_install.cmake\nfi\n";
			showEnvVarsInLog = 0;
		};
		A23D8E7CD78DF7EFE350CD3A /* Generate CMakeFiles/ZERO_CHECK */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/ZERO_CHECK";
			outputPaths = (
				/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/CMakeFiles/ZERO_CHECK,
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode\n  make -f /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/CMakeScripts/ReRunCMake.make\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode\n  make -f /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/CMakeScripts/ReRunCMake.make\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode\n  make -f /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/CMakeScripts/ReRunCMake.make\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode\n  make -f /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/CMakeScripts/ReRunCMake.make\nfi\n";
			showEnvVarsInLog = 0;
		};
		A2E5CFD961F9BF14C152871D /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "CMake PostBuild Rules";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/src\n  /opt/homebrew/bin/cmake -E cmake_symlink_library /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug/libfreenect.0.7.5.dylib /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug/libfreenect.0.dylib /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug/libfreenect.dylib\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/src\n  /opt/homebrew/bin/cmake -E cmake_symlink_library /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release/libfreenect.0.7.5.dylib /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release/libfreenect.0.dylib /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release/libfreenect.dylib\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/src\n  /opt/homebrew/bin/cmake -E cmake_symlink_library /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel/libfreenect.0.7.5.dylib /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel/libfreenect.0.dylib /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel/libfreenect.dylib\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/src\n  /opt/homebrew/bin/cmake -E cmake_symlink_library /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo/libfreenect.0.7.5.dylib /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo/libfreenect.0.dylib /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo/libfreenect.dylib\nfi\n";
			showEnvVarsInLog = 0;
		};
		CBD323E818B75334BACA1C17 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "CMake PostBuild Rules";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/fakenect\n  /opt/homebrew/bin/cmake -E cmake_symlink_library /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/fakenect/Debug/libfakenect.0.7.5.dylib /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/fakenect/Debug/libfakenect.0.dylib /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/fakenect/Debug/libfakenect.dylib\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/fakenect\n  /opt/homebrew/bin/cmake -E cmake_symlink_library /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/fakenect/Release/libfakenect.0.7.5.dylib /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/fakenect/Release/libfakenect.0.dylib /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/fakenect/Release/libfakenect.dylib\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/fakenect\n  /opt/homebrew/bin/cmake -E cmake_symlink_library /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/fakenect/MinSizeRel/libfakenect.0.7.5.dylib /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/fakenect/MinSizeRel/libfakenect.0.dylib /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/fakenect/MinSizeRel/libfakenect.dylib\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/fakenect\n  /opt/homebrew/bin/cmake -E cmake_symlink_library /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/fakenect/RelWithDebInfo/libfakenect.0.7.5.dylib /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/fakenect/RelWithDebInfo/libfakenect.0.dylib /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/fakenect/RelWithDebInfo/libfakenect.dylib\nfi\n";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		01A53F49904A484684CCB356 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				24522E7B022446C8ADC5D9ED /* glview.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0CCFB9A218244A8A9C066353 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				5D308183C4E142289770DC98 /* micview.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2946A2646AA84348962653FE /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				0D0E41C7B9BE44EBB1025D33 /* libfreenect_sync.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		36654FFEEAEC4CCCA6D40A97 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				AB3345E13128494999F55E09 /* cppview.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		47184D9F638E4670B4C27A87 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D681EE2E72994D2290FE4F1A /* libfreenect_sync.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4B32A7413E6F477C9C8969B8 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E1D28993B4154CFC8F94510D /* audio.c in Sources */,
				4B02C0B6CCCD49A0BB462964 /* cameras.c in Sources */,
				86907CA52AF64EA490C4BD2B /* core.c in Sources */,
				B524B73A6A1644FDAE509BAF /* flags.c in Sources */,
				17DC2F2CA21D43929AE44CE4 /* loader.c in Sources */,
				8A3B4392139F406BB7DA3220 /* registration.c in Sources */,
				719F84E478A442B5B6C3EF84 /* tilt.c in Sources */,
				7507F7AB185C404BB3F33D0D /* usb_libusb10.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		61141C90460C47AE9863E654 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				632B1B4B80D4408FB79E758F /* tiltdemo.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		66B6A65198C94C8CB113BF0E /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3A4E12A2E2C549378CB989D9 /* parson.c in Sources */,
				1A93B462AB354F09A047407E /* record.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		74E9102E886F4F45A9BBDF30 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				AE49DE4FF63048778A74D877 /* audio.c in Sources */,
				2EBD473A62AA47FBA0DEFA82 /* cameras.c in Sources */,
				B5E71B3955E04948A7046C46 /* core.c in Sources */,
				13C93DFA26B343BBB374CEEA /* flags.c in Sources */,
				6D19F14F7CC041979F3A6482 /* loader.c in Sources */,
				64CBBC726FD949CB9B0F7ACA /* registration.c in Sources */,
				E09504EB4A874E07998EB1DD /* tilt.c in Sources */,
				7F0023D585BF4513B7DB0F40 /* usb_libusb10.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8B2E29A4035B4A959B74D513 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				AF4F46F11DA74A489DCCDE75 /* regview.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8D808F7A51CD4F489EBCCAFD /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				F7B9451A273E40F790914C29 /* regtest.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8FDD6E8E06C443D684574992 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3FB366E852EB414C914EFA7E /* hiview.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		9C3A12749D87468F9959C511 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				6CEDDEAE0AFE4B6F9440C25F /* camtest.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		AFDA7E61E5AA4D2D8C2D2EFB /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				11C59093D38C4DF3AA2FA195 /* glpclview.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D76C389C0A5843D6AD8D2C4F /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				6C5177E93ED84D7F9B9C2F0C /* wavrecord.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E6C9661C0B9343DA8FDD4D67 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				8D8E0E8DD5294EBBA1FA7F64 /* cpp_pc_view.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		EFF61FDE9B3544E49F682A0C /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				AB9908E3502A4E12BF414A8E /* fakenect.c in Sources */,
				32894080BAB249049DACECAD /* parson.c in Sources */,
				2161EC105CB943FE912E4E51 /* registration.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		FFAD413E7594433EB40776ED /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				B2F7BEFCD9E1484BB6835275 /* chunkview.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		003E747A58D94D109376F21E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 285841D9F5EA17E961F16851 /* freenect_sync_static */;
			targetProxy = 45521F5061AA4E75AB73FD98 /* PBXContainerItemProxy */;
		};
		0458027C1AE0434E8E2B32AD /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7D7CF4FF0B24FAEDD40DD275 /* freenect-hiview */;
			targetProxy = 918BB06EC38B45F3ABCDA8D1 /* PBXContainerItemProxy */;
		};
		0D9C53D320A04961B67B28D3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 47FBC2E2C14DDF4F509050A5 /* freenect_sync */;
			targetProxy = 38F9182A674B4FD491100B30 /* PBXContainerItemProxy */;
		};
		1222ACDF2AB94E62B22B9E21 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = AC52B3F01A4C691117CFE839 /* freenect */;
			targetProxy = 64C4204218E040C3B726595B /* PBXContainerItemProxy */;
		};
		126F982BFE9C464A9A991245 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2433D2398F26F1112C02E5DB /* ZERO_CHECK */;
			targetProxy = 71631708A77C4BFDAF3C2018 /* PBXContainerItemProxy */;
		};
		1663C6FFDD294397842EE7E0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = AC52B3F01A4C691117CFE839 /* freenect */;
			targetProxy = 6167B998D19E415C83317FF5 /* PBXContainerItemProxy */;
		};
		1999539070344559870E9B52 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = AC52B3F01A4C691117CFE839 /* freenect */;
			targetProxy = 81D658237D47414184D97410 /* PBXContainerItemProxy */;
		};
		1A9D8897CC2840669724D802 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = AC52B3F01A4C691117CFE839 /* freenect */;
			targetProxy = 76CC22B2A1AF495D88781F53 /* PBXContainerItemProxy */;
		};
		27465A4E2F654908AFBC0992 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2433D2398F26F1112C02E5DB /* ZERO_CHECK */;
			targetProxy = 21458A60F73644BAB698B115 /* PBXContainerItemProxy */;
		};
		2DE174E817F4455481A7C87D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = AC52B3F01A4C691117CFE839 /* freenect */;
			targetProxy = E29F060DA963415BBCFDE513 /* PBXContainerItemProxy */;
		};
		3324691944A44AAC9636FDF1 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2433D2398F26F1112C02E5DB /* ZERO_CHECK */;
			targetProxy = DEF1E257A7414F5DA75ADB79 /* PBXContainerItemProxy */;
		};
		388E46F5207C4505A1979E64 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FCF2A4BBFD714B81AF1D1B52 /* freenect-micview */;
			targetProxy = CB991FE8786E4C9F932F1C7B /* PBXContainerItemProxy */;
		};
		39C6B35352324270870A7E51 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = AC52B3F01A4C691117CFE839 /* freenect */;
			targetProxy = 69B52CBC6EB94EBCAB5CA7B5 /* PBXContainerItemProxy */;
		};
		3FE78FB4849A4BF2A1D1CCE8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = AE8142046C15A685298E6BB3 /* freenect-glpclview */;
			targetProxy = 172B12712F4649DBA4582A92 /* PBXContainerItemProxy */;
		};
		485743B1DD2D40489EEA4CCB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2433D2398F26F1112C02E5DB /* ZERO_CHECK */;
			targetProxy = DC8E718704EF4EFA9E5D1317 /* PBXContainerItemProxy */;
		};
		49849628F9D4457CB76BAEB8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 1040E5077DCDE0E273BDFBD4 /* ALL_BUILD */;
			targetProxy = A0E79D8D8B8846AB8EAA7709 /* PBXContainerItemProxy */;
		};
		559AF37B996F444EAC54BB0B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 25D0AFF8F6E373D3B3EAFCAD /* freenect-tiltdemo */;
			targetProxy = A696E2056DB9489491BD5DA3 /* PBXContainerItemProxy */;
		};
		5B24453C4D024E0093F6BBBC /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D7E56F1AB442FBFD0C19A55E /* freenect-regtest */;
			targetProxy = FC09BE9BD26641E783BDB82F /* PBXContainerItemProxy */;
		};
		5BF7B49CB66245B7A6D4AC06 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2433D2398F26F1112C02E5DB /* ZERO_CHECK */;
			targetProxy = 52DD3F259D1C4EB7855EB8B8 /* PBXContainerItemProxy */;
		};
		5C3925BA0A234A7DA9F03B1C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = AC52B3F01A4C691117CFE839 /* freenect */;
			targetProxy = 658080B9FAFC4B07ABD22E31 /* PBXContainerItemProxy */;
		};
		5E1CC769B7E946D0ABB8AB8A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2433D2398F26F1112C02E5DB /* ZERO_CHECK */;
			targetProxy = 81E3A4A6312743EFA111F8B0 /* PBXContainerItemProxy */;
		};
		5F077CDF5D284105A1D86BB6 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = AC52B3F01A4C691117CFE839 /* freenect */;
			targetProxy = 5973E601D22E48CCA0AE537F /* PBXContainerItemProxy */;
		};
		65E59BD7B9D24152B004B2B7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = AC52B3F01A4C691117CFE839 /* freenect */;
			targetProxy = A18F2400398740B686BE3EA2 /* PBXContainerItemProxy */;
		};
		6C84C4C2B3154AF4806F784C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = AC52B3F01A4C691117CFE839 /* freenect */;
			targetProxy = 26239E3CDCD44FCE9000B0CB /* PBXContainerItemProxy */;
		};
		726D250341B8425AA3F52331 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = AA064CF094E4A5FD0799D8BF /* freenect-wavrecord */;
			targetProxy = 94DAB738EB2144B8AE8AD9EA /* PBXContainerItemProxy */;
		};
		764076E791A64CB1ABFEA5AB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = AC52B3F01A4C691117CFE839 /* freenect */;
			targetProxy = 5B8F6D0E49334F40B4AE40B4 /* PBXContainerItemProxy */;
		};
		7A0A7E4587BF437EAEC39D06 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2433D2398F26F1112C02E5DB /* ZERO_CHECK */;
			targetProxy = 8DA9578CBFE6465380CC1EF9 /* PBXContainerItemProxy */;
		};
		7A4DFA6C8C93430B86ECACB6 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 47FBC2E2C14DDF4F509050A5 /* freenect_sync */;
			targetProxy = B949EB765241482EA1CCD4F6 /* PBXContainerItemProxy */;
		};
		7DA517A2385F4CBCB911EB6A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 9E4C7E9B49E28F2471733604 /* freenect-glview */;
			targetProxy = 3BD5BC2F2A4A4F5C809720FE /* PBXContainerItemProxy */;
		};
		7DE595B8B8E448A6B014517C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2433D2398F26F1112C02E5DB /* ZERO_CHECK */;
			targetProxy = E216599C51904F47B56BBB1F /* PBXContainerItemProxy */;
		};
		8587C9F41CF34AA0B46E8750 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 72440F43668EC44423B78C51 /* freenect-chunkview */;
			targetProxy = 9AE9143BD8F14EEA9DC1321E /* PBXContainerItemProxy */;
		};
		8CA265BEFFE7429386AC96FD /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2433D2398F26F1112C02E5DB /* ZERO_CHECK */;
			targetProxy = 509AF31301DC4D7AB1DEB050 /* PBXContainerItemProxy */;
		};
		9179D6A54B2A49C49595CFFD /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2433D2398F26F1112C02E5DB /* ZERO_CHECK */;
			targetProxy = 64395640005F4C9F94227E8B /* PBXContainerItemProxy */;
		};
		91DDE260672F476DBC4D440F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 47FBC2E2C14DDF4F509050A5 /* freenect_sync */;
			targetProxy = F0B8544B823945F2A7B1DA8D /* PBXContainerItemProxy */;
		};
		929A2F1B4E214D5686599652 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = AC52B3F01A4C691117CFE839 /* freenect */;
			targetProxy = 345FEFD7FD00465199AEED37 /* PBXContainerItemProxy */;
		};
		9A9236C4441746CBB14D7715 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = C8B9457D21360F20993877B6 /* freenectstatic */;
			targetProxy = 41DE0A6809174D7C97A7D468 /* PBXContainerItemProxy */;
		};
		9BE62C79B6DB4D9FB47AD33E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = CD34CC1D9643EA463FC57BCF /* freenect-regview */;
			targetProxy = 6A08A765A57B4E968ACCFEB3 /* PBXContainerItemProxy */;
		};
		A982EA7975DD4DB7AC961FFE /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 47140BFD6B1E41C10D590113 /* freenect-cpp_pcview */;
			targetProxy = E884754AB00E4CDBAF782D85 /* PBXContainerItemProxy */;
		};
		ABB2D97E64684FA9B98E914D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2433D2398F26F1112C02E5DB /* ZERO_CHECK */;
			targetProxy = 12430AFE4D3F42F18DBCF9F8 /* PBXContainerItemProxy */;
		};
		AD9DDCD9C5754896A90DF584 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = AC52B3F01A4C691117CFE839 /* freenect */;
			targetProxy = 4103D6601C644E8F9672A3E6 /* PBXContainerItemProxy */;
		};
		B37DCC3019C549908B26156C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = AC52B3F01A4C691117CFE839 /* freenect */;
			targetProxy = 16610A851AF24670AD350CA3 /* PBXContainerItemProxy */;
		};
		B87E4AF3C7B94E8DB291B8E9 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FDD59D97038E272A68B2400A /* fakenect-record */;
			targetProxy = A46274B6680F4A359D510233 /* PBXContainerItemProxy */;
		};
		C2F993F712964535A10EB3C2 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2433D2398F26F1112C02E5DB /* ZERO_CHECK */;
			targetProxy = 6015DFC585794C9C900D0861 /* PBXContainerItemProxy */;
		};
		D430E38A83234F87BDE40FBF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2433D2398F26F1112C02E5DB /* ZERO_CHECK */;
			targetProxy = A90E6AB1A11B4238911C6027 /* PBXContainerItemProxy */;
		};
		DF6EE6360CB5407EB4C6D47F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2433D2398F26F1112C02E5DB /* ZERO_CHECK */;
			targetProxy = 3D6F4B9E4E0746A1AF059C6C /* PBXContainerItemProxy */;
		};
		EAD5252552F74DD19BA9C69C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2433D2398F26F1112C02E5DB /* ZERO_CHECK */;
			targetProxy = 7C86AB3B3FDD4C7B88637DEB /* PBXContainerItemProxy */;
		};
		ECD3E2FF40584868AD4EF775 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2433D2398F26F1112C02E5DB /* ZERO_CHECK */;
			targetProxy = C24BDEBDD57743BDADA93D06 /* PBXContainerItemProxy */;
		};
		EDB33A7822BF4D06BBF32FA5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2433D2398F26F1112C02E5DB /* ZERO_CHECK */;
			targetProxy = 4458F4C3073B4DFBB191B96E /* PBXContainerItemProxy */;
		};
		F180C142D56C49DE8DCA2BD1 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = AC52B3F01A4C691117CFE839 /* freenect */;
			targetProxy = 5B3B0FAAC5FB466EB2F7E49D /* PBXContainerItemProxy */;
		};
		F19971EEA5944CB7AFB057F0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 47FBC2E2C14DDF4F509050A5 /* freenect_sync */;
			targetProxy = C74454585A2B4A2A9354A505 /* PBXContainerItemProxy */;
		};
		F5647BE2E44C446BA4BF9C32 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FB41CE8D51FD233C7E6C851D /* freenect-camtest */;
			targetProxy = 536B4F709107493BBA3E2729 /* PBXContainerItemProxy */;
		};
		F8A0C3E6A3CC4AB9B99A0967 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2433D2398F26F1112C02E5DB /* ZERO_CHECK */;
			targetProxy = 3DA854D898744609B8A11AC5 /* PBXContainerItemProxy */;
		};
		FAEE671A5B90423FA07AAAE1 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2433D2398F26F1112C02E5DB /* ZERO_CHECK */;
			targetProxy = EE5CDFA822AB4A6EBE039408 /* PBXContainerItemProxy */;
		};
		FDC1C77E4ADF442F932A02BD /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6A914A5DAE727278BDA1591E /* freenect-cppview */;
			targetProxy = 6E32780EFCFC4E108CE5EDBA /* PBXContainerItemProxy */;
		};
		FE5BC73A946145259173BBD7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = AC52B3F01A4C691117CFE839 /* freenect */;
			targetProxy = 7DBE8B0834254460B027AD89 /* PBXContainerItemProxy */;
		};
		FF67C6A0E258419484302A65 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2433D2398F26F1112C02E5DB /* ZERO_CHECK */;
			targetProxy = CD580AECDFA9478A982B8121 /* PBXContainerItemProxy */;
		};
		FFA500232D8747B4958A25FD /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 63C074D18BE8BE9C57683E6D /* fakenect */;
			targetProxy = 999C93C316AE4333A8B4C45E /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		0285BAF3B95F46EBA6C5E319 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel/libfreenect.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lpthread",
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-micview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-micview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		06E0EB82AE6247B3BC8DED99 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		094BC04ECA5F47D8AC665808 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/fakenect/../src,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"-DDEBUG=1",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug/libfreenect.0.7.5.dylib,
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "fakenect-record";
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/fakenect-record.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		094DE2C40E864D939D0FA029 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release/libfreenect.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lpthread",
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-chunkview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-chunkview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		0E22282D4616479BA763AB93 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo/libfreenect.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lpthread",
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-hiview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-hiview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		109F47BC74AB4ABEA74D3B22 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		119A54AE65D04F79A8ED14B0 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"-DDEBUG=1",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug/libfreenect_sync.0.7.5.dylib,
					"-lm",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug/libfreenect.0.7.5.dylib,
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-lpthread",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-tiltdemo";
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-tiltdemo.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		146D6E1FD3CD4A549E5DD95C /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo/libfreenect_sync.0.7.5.dylib,
					"-lm",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo/libfreenect.0.7.5.dylib,
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-lpthread",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-regtest";
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-regtest.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		17B1023714284E2BB0CCF2AC /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"-DDEBUG=1",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug/libfreenect_sync.0.7.5.dylib,
					"-lm",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug/libfreenect.0.7.5.dylib,
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-lpthread",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-regtest";
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-regtest.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		19DEC0375198463C8ED9022C /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo/libfreenect.0.7.5.dylib,
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-wavrecord";
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-wavrecord.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		1C1D11BABD964D2EAE93BA19 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo;
				DYLIB_COMPATIBILITY_VERSION = "";
				DYLIB_CURRENT_VERSION = 0.7.5;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					freenect_EXPORTS,
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/src,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_DYLIB_INSTALL_NAME = "$(DYLIB_INSTALL_NAME_BASE:standardizepath)/$(EXECUTABLE_PATH)";
				LIBRARY_SEARCH_PATHS = "@loader_path/../Frameworks";
				LIBRARY_STYLE = DYNAMIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"-fPIC",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-Wl,-headerpad_max_install_names",
					"-install_name",
					"@rpath/../Frameworks/libfreenect.dylib",
					"$(PROJECT_DIR)/../VendorLibs/libusb.dylib",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = freenect.0.7.5;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		1D2516B96D704592BD7D233E /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release/libfreenect.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lpthread",
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-micview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-micview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		1E8635A926A04533895DB212 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/fakenect/Debug;
				DYLIB_COMPATIBILITY_VERSION = "";
				DYLIB_CURRENT_VERSION = 0.7.5;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					fakenect_EXPORTS,
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/fakenect/../src,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = DYNAMIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"-DDEBUG=1",
					"-fPIC",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-Wl,-headerpad_max_install_names",
					"-install_name",
					"@rpath/libfakenect.0.dylib",
					"-lm",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = fakenect.0.7.5;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/fakenect.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		24DA85F0C806434B9359FD65 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release/libfreenect_sync.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lm",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release/libfreenect.0.7.5.dylib,
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-lpthread",
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-glpclview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-glpclview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		267977A6E3144ACC98F38D8E /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/fakenect/RelWithDebInfo;
				DYLIB_COMPATIBILITY_VERSION = "";
				DYLIB_CURRENT_VERSION = 0.7.5;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					fakenect_EXPORTS,
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/fakenect/../src,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = DYNAMIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"-fPIC",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-Wl,-headerpad_max_install_names",
					"-install_name",
					"@rpath/libfakenect.0.dylib",
					"-lm",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = fakenect.0.7.5;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/fakenect.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		27315920F89E4371987A3349 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"-DDEBUG=1",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug/libfreenect.0.7.5.dylib,
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-camtest";
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-camtest.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		296D2115400D405386CD33F5 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo;
				DYLIB_COMPATIBILITY_VERSION = "";
				DYLIB_CURRENT_VERSION = 0.7.5;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					freenect_sync_EXPORTS,
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo,
					"$(inherited)",
				);
				LIBRARY_STYLE = DYNAMIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"-fPIC",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-Wl,-headerpad_max_install_names",
					"-install_name",
					"@rpath/libfreenect_sync.0.dylib",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo/libfreenect.0.7.5.dylib,
					"-lpthread",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = freenect_sync.0.7.5;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect_sync.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		2A1D909E616844C693DE3732 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release/libfreenect_sync.0.7.5.dylib,
					"-lm",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release/libfreenect.0.7.5.dylib,
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-lpthread",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-regtest";
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-regtest.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		2B42F5A9C12E434298718DE9 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel;
				DYLIB_COMPATIBILITY_VERSION = "";
				DYLIB_CURRENT_VERSION = 0.7.5;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					freenect_EXPORTS,
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/src,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_DYLIB_INSTALL_NAME = "$(DYLIB_INSTALL_NAME_BASE:standardizepath)/$(EXECUTABLE_PATH)";
				LIBRARY_SEARCH_PATHS = "@loader_path/../Frameworks";
				LIBRARY_STYLE = DYNAMIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-DNDEBUG",
					"-fPIC",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-Wl,-headerpad_max_install_names",
					"-install_name",
					"@rpath/../Frameworks/libfreenect.dylib",
					"$(PROJECT_DIR)/../VendorLibs/libusb.dylib",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = freenect.0.7.5;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		2E4E78CAA80E442DA8FC68D3 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo/libfreenect.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lpthread",
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-glview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-glview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		2FFE24DF3DE24A34B1DA65ED /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		34019310DCD94AF098A2A31C /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"-DDEBUG=1",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug/libfreenect.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lpthread",
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-hiview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-hiview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		35523EB0A63F437BB03AD8BB /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo/libfreenect.0.7.5.dylib,
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-camtest";
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-camtest.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		35F4FFB30C84404D8AD88C85 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"-DDEBUG=1",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug/libfreenect.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lpthread",
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-regview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-regview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		3642F06F7C9D44C8A17FECD0 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/wrappers/cpp/.,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = (
					"-Wall",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release/libfreenect.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lpthread",
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-cpp_pcview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-cpp_pcview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		389685EC2DE64D1EA8460916 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel/libfreenect.0.7.5.dylib,
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-camtest";
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-camtest.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		3B28F6D7AE6F4E2588A0A657 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release/libfreenect.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lpthread",
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-hiview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-hiview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		3CEAE6EFE2C14B5EA2691C18 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"$(inherited)",
				);
				OTHER_LIBTOOLFLAGS = "";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = freenect_sync;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect_sync_static.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		3DBE2BAE06F64341A5369CB7 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/fakenect/../src,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel/libfreenect.0.7.5.dylib,
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "fakenect-record";
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/fakenect-record.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		404BD4F3A2054E978629B69A /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/src,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LIBTOOLFLAGS = "";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = freenect;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenectstatic.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		427AD784B8BA44DC960B6387 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"-DDEBUG=1",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug/libfreenect_sync.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lm",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug/libfreenect.0.7.5.dylib,
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-lpthread",
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-glpclview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-glpclview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		45CD44B45A0B4CD9A9CFA209 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = uninstall;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		473CE6C53BB243978F726A75 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"-DDEBUG=1",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug/libfreenect.0.7.5.dylib,
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-wavrecord";
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-wavrecord.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		4A3F261C1F6E4518BFD0A2A2 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo/libfreenect_sync.0.7.5.dylib,
					"-lm",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo/libfreenect.0.7.5.dylib,
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-lpthread",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-tiltdemo";
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-tiltdemo.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		58BCD734C1DC4DB89A609F19 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel/libfreenect.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lpthread",
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-glview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-glview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		5A557BC28288400AA7251FAA /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo/libfreenect.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lpthread",
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-regview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-regview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		5D2FDAE35B0849A88614FD87 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				MACOSX_DEPLOYMENT_TARGET = 12.0;
				SDKROOT = "";
				SYMROOT = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build;
			};
			name = Debug;
		};
		63677D83A48047869D6FCC2B /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo/libfreenect_sync.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lm",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo/libfreenect.0.7.5.dylib,
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-lpthread",
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-glpclview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-glpclview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		664F120E80864601950DC7A4 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/wrappers/cpp/.,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = (
					"-Wall",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo/libfreenect.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lpthread",
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-cppview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-cppview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		68A35B37CC5643E494003143 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release/libfreenect.0.7.5.dylib,
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-wavrecord";
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-wavrecord.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		69B312230B614EAEB2A011BE /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release/libfreenect.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lpthread",
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-regview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-regview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		70B7775941F74997A768D6E3 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/wrappers/cpp/.,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = (
					"-Wall",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release/libfreenect.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lpthread",
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-cppview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-cppview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		71C28CEA18144D149B40D9DB /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel/libfreenect.0.7.5.dylib,
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-wavrecord";
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-wavrecord.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		790100D4CD0C4B87A1308854 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/fakenect/../src,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release/libfreenect.0.7.5.dylib,
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "fakenect-record";
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/fakenect-record.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		7CF8117D4BA44B8EB8B4BBBC /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel;
				DYLIB_COMPATIBILITY_VERSION = "";
				DYLIB_CURRENT_VERSION = 0.7.5;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					freenect_sync_EXPORTS,
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel,
					"$(inherited)",
				);
				LIBRARY_STYLE = DYNAMIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-DNDEBUG",
					"-fPIC",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-Wl,-headerpad_max_install_names",
					"-install_name",
					"@rpath/libfreenect_sync.0.dylib",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel/libfreenect.0.7.5.dylib,
					"-lpthread",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = freenect_sync.0.7.5;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect_sync.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		7DE9B9AA3FEA486EAA78C35E /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				MACOSX_DEPLOYMENT_TARGET = 12.0;
				SDKROOT = "";
				SWIFT_COMPILATION_MODE = wholemodule;
				SYMROOT = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build;
			};
			name = Release;
		};
		826493A7764C4C8A8B0A1F81 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"$(inherited)",
				);
				OTHER_LIBTOOLFLAGS = "";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = freenect_sync;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect_sync_static.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		8478C20CC10549F19A3AA4AF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/wrappers/cpp/.,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = (
					"-Wall",
					"-Wall",
					"-DDEBUG=1",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug/libfreenect.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lpthread",
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-cppview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-cppview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		8763F83C275F4B46A39500BB /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"-DDEBUG=1",
					"$(inherited)",
				);
				OTHER_LIBTOOLFLAGS = "";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = freenect_sync;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect_sync_static.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		878864FFEE244FD580AF62A9 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		8A00A578771949EDB7E7FE12 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release;
				DYLIB_COMPATIBILITY_VERSION = "";
				DYLIB_CURRENT_VERSION = 0.7.5;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					freenect_sync_EXPORTS,
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release,
					"$(inherited)",
				);
				LIBRARY_STYLE = DYNAMIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"-fPIC",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-Wl,-headerpad_max_install_names",
					"-install_name",
					"@rpath/libfreenect_sync.0.dylib",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release/libfreenect.0.7.5.dylib,
					"-lpthread",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = freenect_sync.0.7.5;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect_sync.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		8B0A0D5BEA4941F78F30B313 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"-DDEBUG=1",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug/libfreenect.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lpthread",
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-chunkview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-chunkview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		8F6DBDC261DE401989410D1C /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo/libfreenect.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lpthread",
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-chunkview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-chunkview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		95611DD621804543B51CDCD3 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel/libfreenect.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lpthread",
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-regview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-regview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		96B0EDBC81A240DBA5CC9FDC /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"-DDEBUG=1",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug/libfreenect.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lpthread",
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-micview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-micview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		96DB98E45C4E4BC189E626A5 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel/libfreenect_sync.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lm",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel/libfreenect.0.7.5.dylib,
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-lpthread",
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-glpclview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-glpclview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		9F04A6E5549E4ABEA23D3E2A /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = uninstall;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		A3157414B2FC44F4B48F12BF /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		A3DB5479214741348A447DAF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		A8D145D4431B4B82B7395E9F /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/src,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"$(inherited)",
				);
				OTHER_LIBTOOLFLAGS = "";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = freenect;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenectstatic.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		B037E532907C45618E656D89 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel/libfreenect_sync.0.7.5.dylib,
					"-lm",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel/libfreenect.0.7.5.dylib,
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-lpthread",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-regtest";
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-regtest.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		B25B06C6DCFB446CB381F4DB /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel/libfreenect_sync.0.7.5.dylib,
					"-lm",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel/libfreenect.0.7.5.dylib,
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-lpthread",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-tiltdemo";
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-tiltdemo.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		B42084420C7D438EA9E7ECE9 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/fakenect/Release;
				DYLIB_COMPATIBILITY_VERSION = "";
				DYLIB_CURRENT_VERSION = 0.7.5;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					fakenect_EXPORTS,
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/fakenect/../src,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = DYNAMIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"-fPIC",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-Wl,-headerpad_max_install_names",
					"-install_name",
					"@rpath/libfakenect.0.dylib",
					"-lm",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = fakenect.0.7.5;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/fakenect.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		B4DDF6140BF8408EA12BC6B2 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/src,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"$(inherited)",
				);
				OTHER_LIBTOOLFLAGS = "";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = freenect;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenectstatic.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		B5952FD5E469488EAE6034B8 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/wrappers/cpp/.,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = (
					"-Wall",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel/libfreenect.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lpthread",
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-cppview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-cppview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		B6020E99CBC44E6E9421347D /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug;
				DYLIB_COMPATIBILITY_VERSION = "";
				DYLIB_CURRENT_VERSION = 0.7.5;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					freenect_sync_EXPORTS,
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug,
					"$(inherited)",
				);
				LIBRARY_STYLE = DYNAMIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"-DDEBUG=1",
					"-fPIC",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-Wl,-headerpad_max_install_names",
					"-install_name",
					"@rpath/libfreenect_sync.0.dylib",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug/libfreenect.0.7.5.dylib,
					"-lpthread",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = freenect_sync.0.7.5;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect_sync.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		BA2B3E1EA24D4DA8B8DCAF66 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		BA47A5F386C8432880AF5474 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/fakenect/../src,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo/libfreenect.0.7.5.dylib,
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "fakenect-record";
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/fakenect-record.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		BB7DBFA26E3842CE8F4AB2A4 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/wrappers/cpp/.,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = (
					"-Wall",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel/libfreenect.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lpthread",
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-cpp_pcview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-cpp_pcview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		BBF00932E9174008AA254727 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				MACOSX_DEPLOYMENT_TARGET = 12.0;
				SDKROOT = "";
				SWIFT_COMPILATION_MODE = wholemodule;
				SYMROOT = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build;
			};
			name = MinSizeRel;
		};
		BD44884E9DC94478BD2E99A3 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel/libfreenect.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lpthread",
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-hiview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-hiview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		BEA89FA41700407DBF09DF90 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		C2FA10D1C71741F180BE532A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release/libfreenect.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lpthread",
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-glview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-glview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		C402C3F59A5A49628D313166 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = uninstall;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		C4B1A57ACAC84CCE98775C45 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/fakenect/MinSizeRel;
				DYLIB_COMPATIBILITY_VERSION = "";
				DYLIB_CURRENT_VERSION = 0.7.5;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					fakenect_EXPORTS,
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/fakenect/../src,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = DYNAMIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-DNDEBUG",
					"-fPIC",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-Wl,-headerpad_max_install_names",
					"-install_name",
					"@rpath/libfakenect.0.dylib",
					"-lm",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = fakenect.0.7.5;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/fakenect.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		C6B6F0949D4E4D7DBDE25073 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release/libfreenect.0.7.5.dylib,
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-camtest";
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-camtest.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		C88436FB7601425790274AD4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release;
				DYLIB_COMPATIBILITY_VERSION = "";
				DYLIB_CURRENT_VERSION = 0.7.5;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					freenect_EXPORTS,
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/src,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_DYLIB_INSTALL_NAME = "$(DYLIB_INSTALL_NAME_BASE:standardizepath)/$(EXECUTABLE_PATH)";
				LIBRARY_SEARCH_PATHS = "@loader_path/../Frameworks";
				LIBRARY_STYLE = DYNAMIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"-fPIC",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-Wl,-headerpad_max_install_names",
					"-install_name",
					"@rpath/../Frameworks/libfreenect.dylib",
					"$(PROJECT_DIR)/../VendorLibs/libusb.dylib",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = freenect.0.7.5;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		CC477437024F4A278D9BB1A4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release/libfreenect_sync.0.7.5.dylib,
					"-lm",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Release/libfreenect.0.7.5.dylib,
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-lpthread",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-tiltdemo";
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-tiltdemo.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		DBB75DDA9FA74E84BD15D96F /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		DD3C1F83D2114559A6F90C7F /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel/libfreenect.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lpthread",
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-chunkview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-chunkview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		DF2F0349D4AF41FD94D2C871 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = uninstall;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		E05CACCE5DEC406A89F53909 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		E40688157C0C43548823720C /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/MinSizeRel;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LIBTOOLFLAGS = "";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = freenect_sync;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect_sync_static.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		E5861479E6984CA5AB492150 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/wrappers/cpp/.,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = (
					"-Wall",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo/libfreenect.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lpthread",
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-cpp_pcview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-cpp_pcview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		E67E1FAD8B704686B1144D36 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				MACOSX_DEPLOYMENT_TARGET = 12.0;
				SDKROOT = "";
				SWIFT_COMPILATION_MODE = wholemodule;
				SYMROOT = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build;
			};
			name = RelWithDebInfo;
		};
		E7B07BAC12BA4B68AD8E7D60 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/wrappers/cpp/.,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = (
					"-Wall",
					"-Wall",
					"-DDEBUG=1",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug/libfreenect.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lpthread",
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-cpp_pcview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-cpp_pcview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		EA45815CB0CD47CE824492A4 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug;
				DYLIB_COMPATIBILITY_VERSION = "";
				DYLIB_CURRENT_VERSION = 0.7.5;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					freenect_EXPORTS,
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/src,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_DYLIB_INSTALL_NAME = "$(DYLIB_INSTALL_NAME_BASE:standardizepath)/$(EXECUTABLE_PATH)";
				LIBRARY_SEARCH_PATHS = "@loader_path/../Frameworks";
				LIBRARY_STYLE = DYNAMIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"-DDEBUG=1",
					"-fPIC",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-Wl,-headerpad_max_install_names",
					"-install_name",
					"@rpath/../Frameworks/libfreenect.dylib",
					"$(PROJECT_DIR)/../VendorLibs/libusb.dylib",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = freenect.0.7.5;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		EA738A261D7E4908965041FF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/src,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"-DDEBUG=1",
					"$(inherited)",
				);
				OTHER_LIBTOOLFLAGS = "";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = freenect;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenectstatic.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		EC9545A3A55940798030EF37 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		F422695CF55C4DC99E1D02B0 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		F76D13122A5A42669FA805FE /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"-DDEBUG=1",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/Debug/libfreenect.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lpthread",
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-glview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-glview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		F8B3717DE485424A839DE764 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/include,
					"/opt/homebrew/include/libusb-1.0",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/examples/../wrappers/c_sync,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo,
					"$(inherited)",
				);
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wall",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/lib/RelWithDebInfo/libfreenect.0.7.5.dylib,
					"-framework",
					OpenGL,
					"-framework",
					GLUT,
					"-lpthread",
					"-lm",
					"/opt/homebrew/lib/libusb-1.0.dylib",
					"-framework",
					Cocoa,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "freenect-micview";
				SECTORDER_FLAGS = "";
				SYSTEM_FRAMEWORK_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks,
					"$(inherited)",
				);
				SYSTEM_HEADER_SEARCH_PATHS = (
					/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/System/Library/Frameworks/GLUT.framework/Headers,
					"$(inherited)",
				);
				TARGET_TEMP_DIR = "/Users/marte/vjing/FreenectTD/FreenectTD/libfreenect/Xcode/build/freenect-micview.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		043806223F6849779CD833CE /* Build configuration list for PBXNativeTarget "freenect-regtest" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				17B1023714284E2BB0CCF2AC /* Debug */,
				2A1D909E616844C693DE3732 /* Release */,
				B037E532907C45618E656D89 /* MinSizeRel */,
				146D6E1FD3CD4A549E5DD95C /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		0C3C4822D6E44543B3E12425 /* Build configuration list for PBXAggregateTarget "install" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				F422695CF55C4DC99E1D02B0 /* Debug */,
				E05CACCE5DEC406A89F53909 /* Release */,
				2FFE24DF3DE24A34B1DA65ED /* MinSizeRel */,
				BA2B3E1EA24D4DA8B8DCAF66 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		0D13E9F01A144F8EA940A6E1 /* Build configuration list for PBXAggregateTarget "uninstall" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				DF2F0349D4AF41FD94D2C871 /* Debug */,
				C402C3F59A5A49628D313166 /* Release */,
				45CD44B45A0B4CD9A9CFA209 /* MinSizeRel */,
				9F04A6E5549E4ABEA23D3E2A /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		3B2AF1C174D24D31BA93B0BA /* Build configuration list for PBXNativeTarget "freenect-tiltdemo" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				119A54AE65D04F79A8ED14B0 /* Debug */,
				CC477437024F4A278D9BB1A4 /* Release */,
				B25B06C6DCFB446CB381F4DB /* MinSizeRel */,
				4A3F261C1F6E4518BFD0A2A2 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		41566C4CB8CE441A8AA941A1 /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				109F47BC74AB4ABEA74D3B22 /* Debug */,
				BEA89FA41700407DBF09DF90 /* Release */,
				DBB75DDA9FA74E84BD15D96F /* MinSizeRel */,
				878864FFEE244FD580AF62A9 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		53D2AFE33D3C4A8C9F8C57D4 /* Build configuration list for PBXNativeTarget "freenect-cpp_pcview" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E7B07BAC12BA4B68AD8E7D60 /* Debug */,
				3642F06F7C9D44C8A17FECD0 /* Release */,
				BB7DBFA26E3842CE8F4AB2A4 /* MinSizeRel */,
				E5861479E6984CA5AB492150 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		5BD1A7E4F030424F99FBA302 /* Build configuration list for PBXNativeTarget "freenect_sync_static" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				8763F83C275F4B46A39500BB /* Debug */,
				3CEAE6EFE2C14B5EA2691C18 /* Release */,
				E40688157C0C43548823720C /* MinSizeRel */,
				826493A7764C4C8A8B0A1F81 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		7E2DF7F357D44BD9AC9B16C0 /* Build configuration list for PBXNativeTarget "freenect-cppview" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				8478C20CC10549F19A3AA4AF /* Debug */,
				70B7775941F74997A768D6E3 /* Release */,
				B5952FD5E469488EAE6034B8 /* MinSizeRel */,
				664F120E80864601950DC7A4 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		82C03A6A704D44B5A8D234A3 /* Build configuration list for PBXNativeTarget "freenect-glpclview" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				427AD784B8BA44DC960B6387 /* Debug */,
				24DA85F0C806434B9359FD65 /* Release */,
				96DB98E45C4E4BC189E626A5 /* MinSizeRel */,
				63677D83A48047869D6FCC2B /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		84F403900EEB49F0AEB78AAF /* Build configuration list for PBXNativeTarget "freenect-chunkview" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				8B0A0D5BEA4941F78F30B313 /* Debug */,
				094DE2C40E864D939D0FA029 /* Release */,
				DD3C1F83D2114559A6F90C7F /* MinSizeRel */,
				8F6DBDC261DE401989410D1C /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		86F84D11B9414C73BCACFC67 /* Build configuration list for PBXNativeTarget "freenect_sync" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B6020E99CBC44E6E9421347D /* Debug */,
				8A00A578771949EDB7E7FE12 /* Release */,
				7CF8117D4BA44B8EB8B4BBBC /* MinSizeRel */,
				296D2115400D405386CD33F5 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		9E1B89C47D6148CFBDFF542E /* Build configuration list for PBXProject "libfreenect" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				5D2FDAE35B0849A88614FD87 /* Debug */,
				7DE9B9AA3FEA486EAA78C35E /* Release */,
				BBF00932E9174008AA254727 /* MinSizeRel */,
				E67E1FAD8B704686B1144D36 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		9FAEC6A19A3747E786F4AF57 /* Build configuration list for PBXNativeTarget "fakenect" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1E8635A926A04533895DB212 /* Debug */,
				B42084420C7D438EA9E7ECE9 /* Release */,
				C4B1A57ACAC84CCE98775C45 /* MinSizeRel */,
				267977A6E3144ACC98F38D8E /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		B6101FA92FC24A4DB5ABBC20 /* Build configuration list for PBXNativeTarget "freenect-regview" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				35F4FFB30C84404D8AD88C85 /* Debug */,
				69B312230B614EAEB2A011BE /* Release */,
				95611DD621804543B51CDCD3 /* MinSizeRel */,
				5A557BC28288400AA7251FAA /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		B6779B76FAFB436A80C537F8 /* Build configuration list for PBXNativeTarget "freenectstatic" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				EA738A261D7E4908965041FF /* Debug */,
				B4DDF6140BF8408EA12BC6B2 /* Release */,
				404BD4F3A2054E978629B69A /* MinSizeRel */,
				A8D145D4431B4B82B7395E9F /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		D1BDFEA37D954D4B94E1C675 /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				06E0EB82AE6247B3BC8DED99 /* Debug */,
				A3DB5479214741348A447DAF /* Release */,
				A3157414B2FC44F4B48F12BF /* MinSizeRel */,
				EC9545A3A55940798030EF37 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		D7924B9F803A4272B3A58C4B /* Build configuration list for PBXNativeTarget "freenect-glview" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				F76D13122A5A42669FA805FE /* Debug */,
				C2FA10D1C71741F180BE532A /* Release */,
				58BCD734C1DC4DB89A609F19 /* MinSizeRel */,
				2E4E78CAA80E442DA8FC68D3 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		D7EFFF63AA62445CB8C57FB9 /* Build configuration list for PBXNativeTarget "fakenect-record" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				094BC04ECA5F47D8AC665808 /* Debug */,
				790100D4CD0C4B87A1308854 /* Release */,
				3DBE2BAE06F64341A5369CB7 /* MinSizeRel */,
				BA47A5F386C8432880AF5474 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		E389769BAB7241AB852D5C08 /* Build configuration list for PBXNativeTarget "freenect-hiview" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				34019310DCD94AF098A2A31C /* Debug */,
				3B28F6D7AE6F4E2588A0A657 /* Release */,
				BD44884E9DC94478BD2E99A3 /* MinSizeRel */,
				0E22282D4616479BA763AB93 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		F25C668735F548F89E16DE86 /* Build configuration list for PBXNativeTarget "freenect-camtest" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				27315920F89E4371987A3349 /* Debug */,
				C6B6F0949D4E4D7DBDE25073 /* Release */,
				389685EC2DE64D1EA8460916 /* MinSizeRel */,
				35523EB0A63F437BB03AD8BB /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		F74B2BA64ADE4986AC47B6CA /* Build configuration list for PBXNativeTarget "freenect-micview" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				96B0EDBC81A240DBA5CC9FDC /* Debug */,
				1D2516B96D704592BD7D233E /* Release */,
				0285BAF3B95F46EBA6C5E319 /* MinSizeRel */,
				F8B3717DE485424A839DE764 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		FAF68886DDD2489AADF6AE7D /* Build configuration list for PBXNativeTarget "freenect-wavrecord" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				473CE6C53BB243978F726A75 /* Debug */,
				68A35B37CC5643E494003143 /* Release */,
				71C28CEA18144D149B40D9DB /* MinSizeRel */,
				19DEC0375198463C8ED9022C /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		FBD6C81F39CA43EE8955DCE2 /* Build configuration list for PBXNativeTarget "freenect" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				EA45815CB0CD47CE824492A4 /* Debug */,
				C88436FB7601425790274AD4 /* Release */,
				2B42F5A9C12E434298718DE9 /* MinSizeRel */,
				1C1D11BABD964D2EAE93BA19 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = 1AE1C58BD83049C0BD709953 /* Project object */;
}
